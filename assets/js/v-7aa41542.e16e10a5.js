"use strict";(self.webpackChunkcclc_vuepress=self.webpackChunkcclc_vuepress||[]).push([[1757],{4579:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-7aa41542",path:"/docker/docker-treafik.html",title:"Docker环境下使用Treafik实现反向代理",lang:"zh-CN",frontmatter:{title:"Docker环境下使用Treafik实现反向代理",date:"2018-09-04",categories:["Docker"],tags:["Docker","Treafik"]},excerpt:"",headers:[{level:2,title:"1.目录结构",slug:"_1-目录结构",children:[]},{level:2,title:"2.docker-compose.yml",slug:"_2-docker-compose-yml",children:[]},{level:2,title:"3.treafik 的管理界面",slug:"_3-treafik-的管理界面",children:[]},{level:2,title:"4.treafik.toml",slug:"_4-treafik-toml",children:[]},{level:2,title:"5.运行",slug:"_5-运行",children:[]}],git:{},filePathRelative:"docker/docker-treafik.md"}},8492:(n,s,a)=>{a.r(s),a.d(s,{default:()=>d});var e=a(6252);const t=(0,e._)("h1",{id:"docker-环境下使用-treafik-实现反向代理",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#docker-环境下使用-treafik-实现反向代理","aria-hidden":"true"},"#"),(0,e.Uk)(" Docker 环境下使用 Treafik 实现反向代理")],-1),i=(0,e._)("p",null,"在以前我们一般使用 nginx 做反向代理来实现在单服务器上部署多服务。",-1),l=(0,e._)("p",null,"现在随着 Docker 的流行，现在越来越多开发人员喜欢在单服务器上使用 Docker 来部署多服务，这样做的好处是显而易见的：资源占用少，系统健壮性更高（崩一个容器不会影响其他容器的运行），省经费（不必为了不同的运行环境而购置多个服务器）等……。",-1),o={href:"https://traefik.io/",target:"_blank",rel:"noopener noreferrer"},c=(0,e._)("p",null,"so let’s use it",-1),r={class:"table-of-contents"},p=(0,e.uE)('<h2 id="_1-目录结构" tabindex="-1"><a class="header-anchor" href="#_1-目录结构" aria-hidden="true">#</a> 1.目录结构</h2><p>certs 目录是我用来保存 https 证书用的，并不需要非这么写。 <img src="/blog_images/docker-treafik/1.png" alt="1"></p><h2 id="_2-docker-compose-yml" tabindex="-1"><a class="header-anchor" href="#_2-docker-compose-yml" aria-hidden="true">#</a> 2.docker-compose.yml</h2><p>treafik 运行在 docker 里，docker-compose 是它的部署文件，类似于 dockerfile 但是比它更优</p><div class="language-docker ext-docker line-numbers-mode"><pre class="language-docker"><code>version: &#39;3&#39;\n\nnetworks:\n  traefiknet:\n    driver: bridge\n\nservices:\n  traefik:\n    image: traefik:v1.5.4-alpine # 我用的这个版本，treafik的版本是个坑\n    command: --api --docker --docker.domain=test.com # Enables the web UI and tells Træfik to listen to docker ( --logLevel=ERROR,INFO) 这里我指定它监听domain为test.com的docker容器，domain配置可以在生成容器时加入--domain test.com实现\n    ports:\n      - &quot;80:80&quot;     # The HTTP port\n      - &quot;443:443&quot;   # The HTTPS port\n      - &quot;8080:8080&quot; # The Web UI (enabled by --api) 在treafik部署好后访问8080端口会显示treafik的管理界面\n    networks:\n      - traefiknet\n    labels:\n      - &quot;traefik.port=8080&quot;\n      - &quot;traefik.frontend.rule=Host:test.cn&quot; # Traefik Web UI monitor treafik管理界面的域名\n      - &quot;traefik.backend=test&quot; # Name the Traefik monitor backend\n    volumes:\n      - /srv/docker/to:/srv/docker/to\n      - ./traefik.toml:/etc/traefik/traefik.toml\n      - ./certs:/etc/traefik/certs # 因为我把证书存在certs目录下，这条语句视你们情况而定\n      - /var/run/docker.sock:/var/run/docker.sock # Listen to the Docker events\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-treafik-的管理界面" tabindex="-1"><a class="header-anchor" href="#_3-treafik-的管理界面" aria-hidden="true">#</a> 3.treafik 的管理界面</h2><p>我把里面的一些隐私信息遮盖掉了。 左边黄色的是配置的监听域名，也可以添加路径前缀来监听指定的访问请求，下面的 Backend 名对应右边的绿色标签名. 右边绿色的是对应的 docker 名和后台地址，这个一般是 treafik 自己生成的 <img src="/blog_images/docker-treafik/2.png" alt="2"></p><h2 id="_4-treafik-toml" tabindex="-1"><a class="header-anchor" href="#_4-treafik-toml" aria-hidden="true">#</a> 4.treafik.toml</h2><p>treafik 的配置文件</p><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token comment">################################################################</span>\n<span class="token comment"># Global configuration</span>\n<span class="token comment">################################################################</span>\n<span class="token key attr-name">defaultEntryPoints</span> <span class="token punctuation">=</span> <span class="token value attr-value">[&quot;http&quot;, &quot;https&quot;]</span>\n<span class="token comment">################################################################</span>\n<span class="token comment"># Traefik log</span>\n<span class="token comment">################################################################</span>\n<span class="token key attr-name">logLevel</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">INFO</span>&quot;</span>\n<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">traefikLog</span><span class="token punctuation">]</span></span>\n  <span class="token key attr-name">filePath</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">/srv/docker/to/traefik.log</span>&quot;</span>\n<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">accessLog</span><span class="token punctuation">]</span></span>\n  <span class="token key attr-name">filePath</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">/srv/docker/to/access.log</span>&quot;</span>\n<span class="token comment">################################################################</span>\n<span class="token comment"># Entrypoints configuration</span>\n<span class="token comment">################################################################</span>\n<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">entryPoints</span><span class="token punctuation">]</span></span>\n  <span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">entryPoints.http</span><span class="token punctuation">]</span></span>\n  <span class="token key attr-name">address</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">:80</span>&quot;</span>\n    <span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">entryPoints.http.redirect</span><span class="token punctuation">]</span></span>\n    <span class="token key attr-name">entryPoint</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">https</span>&quot;</span>\n  <span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">entryPoints.https</span><span class="token punctuation">]</span></span>\n  <span class="token key attr-name">address</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">:443</span>&quot;</span>\n    <span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">entryPoints.https.tls</span><span class="token punctuation">]</span></span>\n      <span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">[entryPoints.https.tls.certificates</span><span class="token punctuation">]</span></span>]\n      <span class="token key attr-name">certFile</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">/etc/traefik/certs/test.com/test.crt</span>&quot;</span>\n      <span class="token key attr-name">keyFile</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;/etc/traefik/certs/test.com/test.key&quot; # 对应第步的证书文件映射设置路径</span>\n  <span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">entryPoints.traefik</span><span class="token punctuation">]</span></span>\n   <span class="token key attr-name">address</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">:8080</span>&quot;</span>\n<span class="token comment">################################################################</span>\n<span class="token comment"># API and dashboard configuration</span>\n<span class="token comment">################################################################</span>\n<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">api</span><span class="token punctuation">]</span></span>\n  <span class="token key attr-name">entryPoint</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">traefik</span>&quot;</span>\n  <span class="token key attr-name">dashboard</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>\n<span class="token comment">################################################################</span>\n<span class="token comment"># Ping configuration</span>\n<span class="token comment">################################################################</span>\n<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">ping</span><span class="token punctuation">]</span></span>\n  <span class="token key attr-name">entryPoint</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">traefik</span>&quot;</span>\n<span class="token comment">################################################################</span>\n<span class="token comment"># Docker configuration backend</span>\n<span class="token comment">################################################################</span>\n<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">docker</span><span class="token punctuation">]</span></span>\n  <span class="token key attr-name">endpoint</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">unix:///var/run/docker.sock</span>&quot;</span>\n  <span class="token key attr-name">domain</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;&quot;</span>\n  <span class="token key attr-name">exposedByDefault</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-运行" tabindex="-1"><a class="header-anchor" href="#_5-运行" aria-hidden="true">#</a> 5.运行</h2><p>至此编码部分就结束了，在 treafik 所在的目录下输入该命令运行 docker</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> <span class="token parameter variable">-f</span> docker-compose.yml up <span class="token parameter variable">-d</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',13),u={},d=(0,a(3744).Z)(u,[["render",function(n,s){const a=(0,e.up)("ExternalLinkIcon"),u=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,i,l,(0,e._)("p",null,[(0,e.Uk)("但是 nginx 和 docker 的相处不是那么融洽，所以 treafik 作为天生支持 docker 的反向代理就诞生了，它还带有负载均衡，支持 https 等其他诸多优点。treafik 官网："),(0,e._)("a",o,[(0,e.Uk)("https://traefik.io/"),(0,e.Wm)(a)])]),c,(0,e._)("nav",r,[(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(u,{to:"#_1-目录结构"},{default:(0,e.w5)((()=>[(0,e.Uk)("1.目录结构")])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(u,{to:"#_2-docker-compose-yml"},{default:(0,e.w5)((()=>[(0,e.Uk)("2.docker-compose.yml")])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(u,{to:"#_3-treafik-的管理界面"},{default:(0,e.w5)((()=>[(0,e.Uk)("3.treafik 的管理界面")])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(u,{to:"#_4-treafik-toml"},{default:(0,e.w5)((()=>[(0,e.Uk)("4.treafik.toml")])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(u,{to:"#_5-运行"},{default:(0,e.w5)((()=>[(0,e.Uk)("5.运行")])),_:1})])])]),p],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);