"use strict";(self.webpackChunkcclc_vuepress=self.webpackChunkcclc_vuepress||[]).push([[7668],{6893:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-7106791b",path:"/vue/vue3-ts-setup-i18n.html",title:"Vue3-TS-composition项目使用vue-i18n库",lang:"zh-CN",frontmatter:{title:"Vue3-TS-composition项目使用vue-i18n库",date:"2023-02-12",categories:["Vue"],tags:["Vue"]},excerpt:"",headers:[{level:2,title:"1.依赖的版本",slug:"_1-依赖的版本",children:[]},{level:2,title:"2.定义i18n",slug:"_2-定义i18n",children:[]},{level:2,title:"3.安装插件",slug:"_3-安装插件",children:[]},{level:2,title:"4.在vue文件内使用i18n",slug:"_4-在vue文件内使用i18n",children:[]},{level:2,title:"5.在ts文件内使用i18n",slug:"_5-在ts文件内使用i18n",children:[]}],git:{},filePathRelative:"vue/vue3-ts-setup-i18n.md"}},1055:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h2 id="_1-依赖的版本" tabindex="-1"><a class="header-anchor" href="#_1-依赖的版本" aria-hidden="true">#</a> 1.依赖的版本</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n<span class="token property">&quot;vue&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.2.45&quot;</span><span class="token punctuation">,</span>\n<span class="token property">&quot;vue-i18n&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^9.2.2&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-定义i18n" tabindex="-1"><a class="header-anchor" href="#_2-定义i18n" aria-hidden="true">#</a> 2.定义i18n</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// locale.ts</span>\n\n<span class="token keyword">const</span> i18n <span class="token operator">=</span> <span class="token function">createI18n</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  legacy<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// you must set `false`, to use Composition API</span>\n  locale<span class="token operator">:</span> <span class="token function">getLang</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;zh&#39;</span><span class="token punctuation">,</span>\n  fallbackLocale<span class="token operator">:</span> <span class="token string">&#39;zh&#39;</span><span class="token punctuation">,</span> <span class="token comment">// set fallback locale</span>\n  globalInjection<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  messages<span class="token operator">:</span> <span class="token punctuation">{</span>\n    zh<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>zhMessages <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    en<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>enMessages <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> i18n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-安装插件" tabindex="-1"><a class="header-anchor" href="#_3-安装插件" aria-hidden="true">#</a> 3.安装插件</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// main.ts</span>\n\n<span class="token keyword">import</span> i18n <span class="token keyword">from</span> <span class="token string">&#39;@/locale&#39;</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>i18n<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-在vue文件内使用i18n" tabindex="-1"><a class="header-anchor" href="#_4-在vue文件内使用i18n" aria-hidden="true">#</a> 4.在vue文件内使用i18n</h2><p>直接在html里用<code>$t</code>来访问i18n messages里的内容</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token comment">&lt;!-- login.vue --&gt;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ $t(&#39;login.error2&#39;) }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-在ts文件内使用i18n" tabindex="-1"><a class="header-anchor" href="#_5-在ts文件内使用i18n" aria-hidden="true">#</a> 5.在ts文件内使用i18n</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// api.ts</span>\n\n<span class="token keyword">import</span> i18n <span class="token keyword">from</span> <span class="token string">&#39;@/locale&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElNotification <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>\n\nElNotification<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  title<span class="token operator">:</span> i18n<span class="token punctuation">.</span>global<span class="token punctuation">.</span><span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;login.error4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  message<span class="token operator">:</span> response<span class="token punctuation">.</span>errmsg<span class="token punctuation">,</span>\n  duration<span class="token operator">:</span> <span class="token number">10000</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',11),t={},p=(0,a(3744).Z)(t,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);