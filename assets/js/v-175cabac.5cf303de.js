"use strict";(self.webpackChunkcclc_vuepress=self.webpackChunkcclc_vuepress||[]).push([[7996],{6229:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-175cabac",path:"/mess-knowledge/wechat-ios-login.html",title:"【iOS】实现微信第三方登录",lang:"zh-CN",frontmatter:{title:"【iOS】实现微信第三方登录",date:"2016-07-24",categories:["WeChat"],tags:["iOS","WeChat"]},excerpt:"",headers:[{level:2,title:"1.下载 iOS 微信 SDK",slug:"_1-下载-ios-微信-sdk",children:[]},{level:2,title:"2.把 SDK 放到工程中（直接拖进去即可）",slug:"_2-把-sdk-放到工程中-直接拖进去即可",children:[]},{level:2,title:"3.导入一些依赖框架和手动添加 AFNetworking 框架",slug:"_3-导入一些依赖框架和手动添加-afnetworking-框架",children:[]},{level:2,title:"4.添加 URL Types，添加 IOS9 URLSchemes，添加 ATS",slug:"_4-添加-url-types-添加-ios9-urlschemes-添加-ats",children:[]},{level:2,title:"5.在 AppDelegate.h 中声明一个变量来保存用户成功登陆后的个人信息，声明一个方法来能够外部调用（为了不 DRY）",slug:"_5-在-appdelegate-h-中声明一个变量来保存用户成功登陆后的个人信息-声明一个方法来能够外部调用-为了不-dry",children:[]},{level:2,title:"6.新建一个 weixinInfo.h 的文件来保存微信的 id,secret 等相关的信息，然后在其他文件里导入这个头文件就能使用这些变量了，以后如果有相关的修改的话，这样比较便捷和安全",slug:"_6-新建一个-weixininfo-h-的文件来保存微信的-id-secret-等相关的信息-然后在其他文件里导入这个头文件就能使用这些变量了-以后如果有相关的修改的话-这样比较便捷和安全",children:[]},{level:2,title:"7.向微信终端程序注册第三方应用，并在第三方应用实现从微信返回",slug:"_7-向微信终端程序注册第三方应用-并在第三方应用实现从微信返回",children:[]},{level:2,title:"8.请求 code",slug:"_8-请求-code",children:[]},{level:2,title:"9.授权后回调",slug:"_9-授权后回调",children:[]},{level:2,title:"10.获取用户信息（UnionID 机制）",slug:"_10-获取用户信息-unionid-机制",children:[]},{level:2,title:"11.总结",slug:"_11-总结",children:[]}],git:{},filePathRelative:"mess-knowledge/wechat-ios-login.md"}},5885:(n,s,a)=>{a.r(s),a.d(s,{default:()=>k});var t=a(6252);const e=(0,t._)("h1",{id:"【ios】实现微信第三方登录",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#【ios】实现微信第三方登录","aria-hidden":"true"},"#"),(0,t.Uk)(" 【iOS】实现微信第三方登录")],-1),p=(0,t._)("div",{class:"custom-container tip"},[(0,t._)("p",{class:"custom-container-title"},"TIP"),(0,t._)("p",null,"移动应用微信登录是基于 OAuth2.0 协议标准构建的微信 OAuth2.0 授权登录系统。 在进行微信 OAuth2.0 授权登录接入之前，在微信开放平台注册开发者帐号，并拥有一个已审核通过的移动应用，并获得相应的 AppID 和 AppSecret，申请微信登录且通过审核后，可开始接入流程。")],-1),o=(0,t._)("p",null,"这篇文章主要介绍了 iOS 微信第三方登录实现的全过程，一步一步告诉大家 iOS 微信实现第三方登录的方法，感兴趣的小伙伴们可以参考一下",-1),i={class:"table-of-contents"},c=(0,t._)("h2",{id:"_1-下载-ios-微信-sdk",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-下载-ios-微信-sdk","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.下载 iOS 微信 SDK")],-1),l={href:"https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&t=resource/res_list&verify=1&id=open1419319164&token=&lang=zh_CN",target:"_blank",rel:"noopener noreferrer"},u=(0,t._)("img",{src:"/blog_images/wechat-ios-login/1.png",alt:"1"},null,-1),r=(0,t.uE)('<h2 id="_2-把-sdk-放到工程中-直接拖进去即可" tabindex="-1"><a class="header-anchor" href="#_2-把-sdk-放到工程中-直接拖进去即可" aria-hidden="true">#</a> 2.把 SDK 放到工程中（直接拖进去即可）</h2><h2 id="_3-导入一些依赖框架和手动添加-afnetworking-框架" tabindex="-1"><a class="header-anchor" href="#_3-导入一些依赖框架和手动添加-afnetworking-框架" aria-hidden="true">#</a> 3.导入一些依赖框架和手动添加 AFNetworking 框架</h2><p><img src="/blog_images/wechat-ios-login/2.png" alt="2"></p><p>最后是这样 <img src="/blog_images/wechat-ios-login/3.png" alt="3"></p><h2 id="_4-添加-url-types-添加-ios9-urlschemes-添加-ats" tabindex="-1"><a class="header-anchor" href="#_4-添加-url-types-添加-ios9-urlschemes-添加-ats" aria-hidden="true">#</a> 4.添加 URL Types，添加 IOS9 URLSchemes，添加 ATS</h2><p>IOS9 中新增 App Transport Security(ATS) 特性，主要使 dao 原来请求的时候用到的 HTTP,都转向 TLS1.2 协议进行传输。这也意味着所有的 HTTP 协议都强制使用了 HTTPS 协议进行传输。需要在 Info.plist 新增一段用于控制 ATS 的配置；</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">&gt;</span></span>NSAppTransportSecurity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dict</span><span class="token punctuation">&gt;</span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">&gt;</span></span>NSAllowsArbitraryLoads<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">&gt;</span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>true</span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dict</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="/blog_images/wechat-ios-login/4.png" alt="4"></p><h2 id="_5-在-appdelegate-h-中声明一个变量来保存用户成功登陆后的个人信息-声明一个方法来能够外部调用-为了不-dry" tabindex="-1"><a class="header-anchor" href="#_5-在-appdelegate-h-中声明一个变量来保存用户成功登陆后的个人信息-声明一个方法来能够外部调用-为了不-dry" aria-hidden="true">#</a> 5.在 AppDelegate.h 中声明一个变量来保存用户成功登陆后的个人信息，声明一个方法来能够外部调用（为了不 DRY）</h2><div class="language-objectivec ext-objectivec line-numbers-mode"><pre class="language-objectivec"><code><span class="token keyword">@property</span> <span class="token punctuation">(</span>nonatomic<span class="token punctuation">,</span>retain<span class="token punctuation">)</span>NSDictionary<span class="token operator">*</span>userInfo<span class="token punctuation">;</span>\n\n<span class="token operator">-</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> weixinLoginByRequestForUserInfo<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-新建一个-weixininfo-h-的文件来保存微信的-id-secret-等相关的信息-然后在其他文件里导入这个头文件就能使用这些变量了-以后如果有相关的修改的话-这样比较便捷和安全" tabindex="-1"><a class="header-anchor" href="#_6-新建一个-weixininfo-h-的文件来保存微信的-id-secret-等相关的信息-然后在其他文件里导入这个头文件就能使用这些变量了-以后如果有相关的修改的话-这样比较便捷和安全" aria-hidden="true">#</a> 6.新建一个 weixinInfo.h 的文件来保存微信的 id,secret 等相关的信息，然后在其他文件里导入这个头文件就能使用这些变量了，以后如果有相关的修改的话，这样比较便捷和安全</h2><p><img src="/blog_images/wechat-ios-login/5.png" alt="5"></p><h2 id="_7-向微信终端程序注册第三方应用-并在第三方应用实现从微信返回" tabindex="-1"><a class="header-anchor" href="#_7-向微信终端程序注册第三方应用-并在第三方应用实现从微信返回" aria-hidden="true">#</a> 7.向微信终端程序注册第三方应用，并在第三方应用实现从微信返回</h2><p>在 AppDelegate.m 中引入“WXApi.h”头文件，然后写入如下：</p><div class="language-objectivec ext-objectivec line-numbers-mode"><pre class="language-objectivec"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">import</span> <span class="token string">&quot;AppDelegate.h&quot;</span></span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">import</span> <span class="token string">&quot;AFNetworking.h&quot;</span></span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">import</span> <span class="token string">&quot;WXApi.h&quot;</span></span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">import</span> <span class="token string">&quot;weixinInfo.h&quot;</span></span>\n\n<span class="token keyword">@interface</span> <span class="token function">AppDelegate</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">@end</span>\n\n<span class="token keyword">@implementation</span> AppDelegate\n\n<span class="token operator">-</span> <span class="token punctuation">(</span>BOOL<span class="token punctuation">)</span>application<span class="token punctuation">:</span><span class="token punctuation">(</span>UIApplication <span class="token operator">*</span><span class="token punctuation">)</span>applicationdidFinishLaunchingWithOptions<span class="token punctuation">:</span><span class="token punctuation">(</span>NSDictionary <span class="token operator">*</span><span class="token punctuation">)</span>launchOptions <span class="token punctuation">{</span>\n    <span class="token comment">//Override point for customization after application launch.</span>\n\n    <span class="token punctuation">[</span>WXApi registerApp<span class="token punctuation">:</span>WXPatient_App_ID withDescription<span class="token punctuation">:</span><span class="token string">@&quot;Wechat&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> YES<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 这个方法是用于从微信返回第三方App</span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span>BOOL<span class="token punctuation">)</span>application<span class="token punctuation">:</span><span class="token punctuation">(</span>UIApplication <span class="token operator">*</span><span class="token punctuation">)</span>application handleOpenURL<span class="token punctuation">:</span><span class="token punctuation">(</span>NSURL <span class="token operator">*</span><span class="token punctuation">)</span>url <span class="token punctuation">{</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">[</span>WXApihandleOpenURL<span class="token punctuation">:</span>urldelegate<span class="token punctuation">:</span><span class="token keyword">self</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-请求-code" tabindex="-1"><a class="header-anchor" href="#_8-请求-code" aria-hidden="true">#</a> 8.请求 code</h2><p>开发者需要配合使用微信开放平台提供的 sdk 进行授权登陆请求接入。正确接入 SDK 后并拥有相关授权域（scope）权限后，开发者移动应用会在终端本地拉起微信应用进行授权登陆，微信用户确认后微信将拉起开发者移动应用，并带上授权临时票据（code）</p><div class="language-objectivec ext-objectivec line-numbers-mode"><pre class="language-objectivec"><code><span class="token comment">/*\n\n 目前移动应用上德微信登录只提供原生的登录方式，需要用户安装微信客户端才能配合使用。\n\n 对于iOS应用,考虑到iOS应用商店审核指南中的相关规定，建议开发者接入微信登录时，先检测用户手机是否已经安装\n\n 微信客户端(使用sdk中的isWXAppInstall函数),对于未安装的用户隐藏微信登录按钮，只提供其他登录方式。\n\n */</span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span>IBAction<span class="token punctuation">)</span>weixinLoginClick<span class="token punctuation">:</span><span class="token punctuation">(</span>UIButton <span class="token operator">*</span><span class="token punctuation">)</span>sender <span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">[</span>WXApiisWXAppInstalled<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        SendAuthReq <span class="token operator">*</span>req <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>SendAuthReqalloc<span class="token punctuation">]</span>init<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        req<span class="token punctuation">.</span>scope <span class="token operator">=</span> WX_SCOPE<span class="token punctuation">;</span>\n\n        req<span class="token punctuation">.</span>state <span class="token operator">=</span> WX_STATE<span class="token punctuation">;</span> <span class="token comment">//可省，不影响功能</span>\n\n        <span class="token punctuation">[</span>WXApi sendReq<span class="token punctuation">:</span>req<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n        <span class="token punctuation">[</span><span class="token keyword">self</span> setupAlertController<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n \n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">mark <span class="token operator">-</span> 设置弹出提示语</span></span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>setupAlertController <span class="token punctuation">{</span>\n   \n\n    UIAlertController <span class="token operator">*</span>alert <span class="token operator">=</span> <span class="token punctuation">[</span>UIAlertControlleralertControllerWithTitle<span class="token punctuation">:</span><span class="token string">@&quot;温馨提示&quot;</span>message<span class="token punctuation">:</span><span class="token string">@&quot;请先安装微信客户端&quot;</span>preferredStyle<span class="token punctuation">:</span>UIAlertControllerStyleAlert<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    UIAlertAction <span class="token operator">*</span>actionConfirm <span class="token operator">=</span> <span class="token punctuation">[</span>UIAlertActionactionWithTitle<span class="token punctuation">:</span><span class="token string">@&quot;确定&quot;</span>style<span class="token punctuation">:</span>UIAlertActionStyleDefaulthandler<span class="token punctuation">:</span>nil<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">[</span>alert addAction<span class="token punctuation">:</span>actionConfirm<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">[</span><span class="token keyword">self</span> presentViewController<span class="token punctuation">:</span>alert animated<span class="token punctuation">:</span>YEScompletion<span class="token punctuation">:</span>nil<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="/blog_images/wechat-ios-login/8.png" alt="8"></p><p>执行完上面那一步后，如果客户端安装了微信，那么就会向微信请求相应的授权，图如下:</p><p><img src="/blog_images/wechat-ios-login/9.png" alt="9"></p><p>（此图用的别人的）</p><p>PS: 还有在实际的使用中我们还要结合需求做一些改变。因为微信授权后 access_token(2 小时)之类的字段都是有效期的在有效期范围内，我们是没必要让用户再次授权的，很可能你的实现，会如我下面所写的。</p><div class="language-objectivec ext-objectivec line-numbers-mode"><pre class="language-objectivec"><code><span class="token comment">/*\n\n// ViewController.h\n\n#import &lt;UIKit/UIKit.h&gt;\n\n@interface ViewController : UIViewController\n\n/** 通过block去执行AppDelegate中的weixinLoginByRequestForUserInfo方法 */</span>\n\n<span class="token keyword">@property</span> <span class="token punctuation">(</span>copy<span class="token punctuation">,</span>nonatomic<span class="token punctuation">)</span><span class="token keyword">void</span><span class="token punctuation">(</span><span class="token operator">^</span>weixinLoginByRequestForUserInfo<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">@end</span>\n\n<span class="token comment">// ViewController.m</span>\n\n 目前移动应用上德微信登录只提供原生的登录方式，需要用户安装微信客户端才能配合使用。\n\n 对于iOS应用<span class="token punctuation">,</span>考虑到iOS应用商店审核指南中的相关规定，建议开发者接入微信登录时，先检测用户手机是否已经安装\n\n 微信客户端<span class="token punctuation">(</span>使用sdk中的isWXAppInstall函数<span class="token punctuation">)</span><span class="token punctuation">,</span>对于未安装的用户隐藏微信登录按钮，只提供其他登录方式。\n\n <span class="token operator">*</span><span class="token operator">/</span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span>IBAction<span class="token punctuation">)</span>weixinLoginClick<span class="token punctuation">:</span><span class="token punctuation">(</span>UIButton <span class="token operator">*</span><span class="token punctuation">)</span>sender <span class="token punctuation">{</span>\n    NSString <span class="token operator">*</span>accessToken <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>NSUserDefaultsstandardUserDefaults<span class="token punctuation">]</span>objectForKey<span class="token punctuation">:</span>WX_ACCESS_TOKEN<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    NSString <span class="token operator">*</span>openID <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>NSUserDefaultsstandardUserDefaults<span class="token punctuation">]</span>objectForKey<span class="token punctuation">:</span>WX_OPEN_ID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 如果已经请求过微信授权登录，那么考虑用已经得到的access_token</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span>accessToken isEqualToString<span class="token punctuation">:</span><span class="token string">@&quot;access_token&quot;</span><span class="token punctuation">]</span><span class="token operator">||</span> <span class="token operator">!</span><span class="token punctuation">[</span>openIDisEqualToString<span class="token punctuation">:</span><span class="token string">@&quot;openid&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token punctuation">[</span><span class="token keyword">self</span> isLoginedAlertController<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        AFHTTPRequestOperationManager <span class="token operator">*</span>manager <span class="token operator">=</span> <span class="token punctuation">[</span>AFHTTPRequestOperationManagermanager<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        manager<span class="token punctuation">.</span>responseSerializer <span class="token operator">=</span> <span class="token punctuation">[</span>AFHTTPResponseSerializerserializer<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        NSString <span class="token operator">*</span>refreshToken <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>NSUserDefaultsstandardUserDefaults<span class="token punctuation">]</span>objectForKey<span class="token punctuation">:</span>WX_REFRESH_TOKEN<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        NSString <span class="token operator">*</span>refreshUrlStr <span class="token operator">=</span> <span class="token punctuation">[</span>NSStringstringWithFormat<span class="token punctuation">:</span><span class="token string">@&quot;%@/oauth2/refresh_token?appid=%@&amp;grant_type=refresh_token&amp;refresh_token=%@&quot;</span><span class="token punctuation">,</span>WX_BASE_URL<span class="token punctuation">,</span>WXPatient_App_ID<span class="token punctuation">,</span> refreshToken<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token punctuation">[</span>manager GET<span class="token punctuation">:</span>refreshUrlStrparameters<span class="token punctuation">:</span>nilsuccess<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>AFHTTPRequestOperation <span class="token operator">*</span>operation<span class="token punctuation">,</span>id responseObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;请求reAccess的response = %@&quot;</span><span class="token punctuation">,</span> responseObject<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//对数据进行转码</span>\n\n            <span class="token comment">// ASCII to NSString</span>\n\n            NSString <span class="token operator">*</span> refreshDictStr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>NSStringalloc<span class="token punctuation">]</span>initWithData<span class="token punctuation">:</span> responseObjectencoding<span class="token punctuation">:</span>NSUTF8StringEncoding<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;\\n\\n refreshDict = %@&quot;</span><span class="token punctuation">,</span>refreshDictStr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//字符串再生成NSData</span>\n\n            NSData <span class="token operator">*</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>refreshDictStrdataUsingEncoding<span class="token punctuation">:</span>NSUTF8StringEncoding<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//再解析</span>\n\n            NSDictionary <span class="token operator">*</span>refreshDict <span class="token operator">=</span> <span class="token punctuation">[</span>NSJSONSerializationJSONObjectWithData<span class="token punctuation">:</span>dataoptions<span class="token punctuation">:</span>NSJSONReadingMutableLeaveserror<span class="token punctuation">:</span>nil<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            NSString <span class="token operator">*</span>reAccessToken <span class="token operator">=</span> <span class="token punctuation">[</span>refreshDictobjectForKey<span class="token punctuation">:</span>WX_ACCESS_TOKEN<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// 如果reAccessToken为空,说明reAccessToken也过期了,反之则没有过期</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>reAccessToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">// 更新access_token、refresh_token、open_id</span>\n\n                <span class="token punctuation">[</span><span class="token punctuation">[</span>NSUserDefaultsstandardUserDefaults<span class="token punctuation">]</span>setObject<span class="token punctuation">:</span>reAccessTokenforKey<span class="token punctuation">:</span>WX_ACCESS_TOKEN<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                <span class="token punctuation">[</span><span class="token punctuation">[</span>NSUserDefaultsstandardUserDefaults<span class="token punctuation">]</span>setObject<span class="token punctuation">:</span><span class="token punctuation">[</span>refreshDictobjectForKey<span class="token punctuation">:</span>WX_OPEN_ID<span class="token punctuation">]</span>forKey<span class="token punctuation">:</span>WX_OPEN_ID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                <span class="token punctuation">[</span><span class="token punctuation">[</span>NSUserDefaultsstandardUserDefaults<span class="token punctuation">]</span>setObject<span class="token punctuation">:</span><span class="token punctuation">[</span>refreshDictobjectForKey<span class="token punctuation">:</span>WX_REFRESH_TOKEN<span class="token punctuation">]</span>forKey<span class="token punctuation">:</span>WX_REFRESH_TOKEN<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                <span class="token punctuation">[</span><span class="token punctuation">[</span>NSUserDefaultsstandardUserDefaults<span class="token punctuation">]</span>synchronize<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                <span class="token comment">// 当存在reAccessToken不为空时直接执行AppDelegate中的weixinLoginByRequestForUserInfo方法</span>\n\n                AppDelegate <span class="token operator">*</span>appDelegate <span class="token operator">=</span> <span class="token punctuation">(</span>AppDelegate <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">[</span>UIApplicationsharedApplication<span class="token punctuation">]</span>delegate<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                <span class="token punctuation">[</span>appDelegate weixinLoginByRequestForUserInfo<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                <span class="token punctuation">[</span><span class="token keyword">self</span> weixinLogin<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token punctuation">}</span>\n\n        <span class="token punctuation">}</span> failure<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>AFHTTPRequestOperation <span class="token operator">*</span>operation<span class="token punctuation">,</span>NSError <span class="token operator">*</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;用refresh_token来更新accessToken时出错 = %@&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token punctuation">[</span><span class="token keyword">self</span> weixinLogin<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-授权后回调" tabindex="-1"><a class="header-anchor" href="#_9-授权后回调" aria-hidden="true">#</a> 9.授权后回调</h2><div class="language-objectivec ext-objectivec line-numbers-mode"><pre class="language-objectivec"><code><span class="token comment">// 授权后回调 AppDelegate.m</span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>onResp<span class="token punctuation">:</span><span class="token punctuation">(</span>BaseResp <span class="token operator">*</span><span class="token punctuation">)</span>resp <span class="token punctuation">{</span>\n    <span class="token comment">// 向微信请求授权后,得到响应结果</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>resp isKindOfClass<span class="token punctuation">:</span><span class="token punctuation">[</span>SendAuthResp class<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        SendAuthResp <span class="token operator">*</span>temp <span class="token operator">=</span> <span class="token punctuation">(</span>SendAuthResp <span class="token operator">*</span><span class="token punctuation">)</span>resp<span class="token punctuation">;</span>\n\n        AFHTTPRequestOperationManager <span class="token operator">*</span>manager <span class="token operator">=</span> <span class="token punctuation">[</span>AFHTTPRequestOperationManagermanager<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        manager<span class="token punctuation">.</span>responseSerializer <span class="token operator">=</span> <span class="token punctuation">[</span>AFHTTPResponseSerializerserializer<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        NSString <span class="token operator">*</span>accessUrlStr <span class="token operator">=</span> <span class="token punctuation">[</span>NSStringstringWithFormat<span class="token punctuation">:</span><span class="token string">@&quot;%@/oauth2/access_token?appid=%@&amp;secret=%@&amp;code=%@&amp;grant_type=authorization_code&quot;</span><span class="token punctuation">,</span>WX_BASE_URL<span class="token punctuation">,</span>WXPatient_App_ID<span class="token punctuation">,</span>WXPatient_App_Secret<span class="token punctuation">,</span> temp<span class="token punctuation">.</span>code<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;%@&quot;</span><span class="token punctuation">,</span>accessUrlStr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token punctuation">[</span>manager GET<span class="token punctuation">:</span>accessUrlStrparameters<span class="token punctuation">:</span>nilsuccess<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>AFHTTPRequestOperation <span class="token operator">*</span>operation<span class="token punctuation">,</span>id responseObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;请求access的response = %@&quot;</span><span class="token punctuation">,</span> responseObject<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// ASCII to NSString</span>\n\n            NSString <span class="token operator">*</span> accessStr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>NSStringalloc<span class="token punctuation">]</span>initWithData<span class="token punctuation">:</span> responseObjectencoding<span class="token punctuation">:</span>NSUTF8StringEncoding<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;nsstring = %@&quot;</span><span class="token punctuation">,</span>accessStr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//字符串再生成NSData</span>\n\n            NSData <span class="token operator">*</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>accessStrdataUsingEncoding<span class="token punctuation">:</span>NSUTF8StringEncoding<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//再解析</span>\n\n            NSDictionary <span class="token operator">*</span>accessDict <span class="token operator">=</span> <span class="token punctuation">[</span>NSJSONSerializationJSONObjectWithData<span class="token punctuation">:</span>dataoptions<span class="token punctuation">:</span>NSJSONReadingMutableLeaveserror<span class="token punctuation">:</span>nil<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            NSString <span class="token operator">*</span>accessToken <span class="token operator">=</span> <span class="token punctuation">[</span>accessDictobjectForKey<span class="token punctuation">:</span>WX_ACCESS_TOKEN<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            NSString <span class="token operator">*</span>openID <span class="token operator">=</span> <span class="token punctuation">[</span>accessDictobjectForKey<span class="token punctuation">:</span>WX_OPEN_ID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            NSString <span class="token operator">*</span>refreshToken <span class="token operator">=</span> <span class="token punctuation">[</span>accessDictobjectForKey<span class="token punctuation">:</span>WX_REFRESH_TOKEN<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// 本地持久化，以便access_token的使用、刷新或者持续</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>accessToken <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">[</span>accessTokenisEqualToString<span class="token punctuation">:</span><span class="token string">@&quot;&quot;</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> openID <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">[</span>openIDisEqualToString<span class="token punctuation">:</span><span class="token string">@&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token punctuation">[</span><span class="token punctuation">[</span>NSUserDefaultsstandardUserDefaults<span class="token punctuation">]</span>setObject<span class="token punctuation">:</span>accessTokenforKey<span class="token punctuation">:</span>WX_ACCESS_TOKEN<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                <span class="token punctuation">[</span><span class="token punctuation">[</span>NSUserDefaultsstandardUserDefaults<span class="token punctuation">]</span>setObject<span class="token punctuation">:</span>openIDforKey<span class="token punctuation">:</span>WX_OPEN_ID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                <span class="token punctuation">[</span><span class="token punctuation">[</span>NSUserDefaultsstandardUserDefaults<span class="token punctuation">]</span>setObject<span class="token punctuation">:</span>refreshTokenforKey<span class="token punctuation">:</span>WX_REFRESH_TOKEN<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                <span class="token punctuation">[</span><span class="token punctuation">[</span>NSUserDefaultsstandardUserDefaults<span class="token punctuation">]</span>synchronize<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//命令直接同步到文件里，来避免数据的丢失</span>\n\n            <span class="token punctuation">}</span>\n\n            <span class="token punctuation">[</span><span class="token keyword">self</span> weixinLoginByRequestForUserInfo<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token punctuation">}</span> failure<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>AFHTTPRequestOperation <span class="token operator">*</span>operation<span class="token punctuation">,</span>NSError <span class="token operator">*</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;获取access_token时出错 = %@&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-获取用户信息-unionid-机制" tabindex="-1"><a class="header-anchor" href="#_10-获取用户信息-unionid-机制" aria-hidden="true">#</a> 10.获取用户信息（UnionID 机制）</h2><div class="language-objectivec ext-objectivec line-numbers-mode"><pre class="language-objectivec"><code><span class="token comment">// 获取用户个人信息（UnionID机制）AppDelegate.m</span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>weixinLoginByRequestForUserInfo <span class="token punctuation">{</span>\n    AFHTTPRequestOperationManager <span class="token operator">*</span>manager <span class="token operator">=</span> <span class="token punctuation">[</span>AFHTTPRequestOperationManagermanager<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    manager<span class="token punctuation">.</span>responseSerializer <span class="token operator">=</span> <span class="token punctuation">[</span>AFHTTPResponseSerializerserializer<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    NSString <span class="token operator">*</span>accessToken <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>NSUserDefaultsstandardUserDefaults<span class="token punctuation">]</span>objectForKey<span class="token punctuation">:</span>WX_ACCESS_TOKEN<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    NSString <span class="token operator">*</span>openID <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>NSUserDefaultsstandardUserDefaults<span class="token punctuation">]</span>objectForKey<span class="token punctuation">:</span>WX_OPEN_ID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    NSString <span class="token operator">*</span>userUrlStr <span class="token operator">=</span> <span class="token punctuation">[</span>NSStringstringWithFormat<span class="token punctuation">:</span><span class="token string">@&quot;%@/userinfo?access_token=%@&amp;openid=%@&quot;</span><span class="token punctuation">,</span>WX_BASE_URL<span class="token punctuation">,</span> accessToken<span class="token punctuation">,</span> openID<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 请求用户数据</span>\n\n    <span class="token punctuation">[</span>manager GET<span class="token punctuation">:</span>userUrlStr parameters<span class="token punctuation">:</span>nil success<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>AFHTTPRequestOperation <span class="token operator">*</span>operation<span class="token punctuation">,</span>id responseObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;请求用户信息的response = %@&quot;</span><span class="token punctuation">,</span> responseObject<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// ASCII to NSString</span>\n\n        NSString <span class="token operator">*</span> accessStr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>NSStringalloc<span class="token punctuation">]</span>initWithData<span class="token punctuation">:</span> responseObjectencoding<span class="token punctuation">:</span>NSUTF8StringEncoding<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;nsstring = %@&quot;</span><span class="token punctuation">,</span>accessStr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//字符串再生成NSData</span>\n\n        NSData <span class="token operator">*</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>accessStrdataUsingEncoding<span class="token punctuation">:</span>NSUTF8StringEncoding<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//再解析</span>\n\n        _userInfo <span class="token operator">=</span> <span class="token punctuation">[</span>NSJSONSerializationJSONObjectWithData<span class="token punctuation">:</span>dataoptions<span class="token punctuation">:</span>NSJSONReadingMutableLeaveserror<span class="token punctuation">:</span>nil<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;\\n\\n userInfo= %@&quot;</span><span class="token punctuation">,</span>_userInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span> failure<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>AFHTTPRequestOperation <span class="token operator">*</span>operation<span class="token punctuation">,</span>NSError <span class="token operator">*</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;获取用户信息时出错 = %@&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-总结" tabindex="-1"><a class="header-anchor" href="#_11-总结" aria-hidden="true">#</a> 11.总结</h2><p>至此微信登陆的流程已经结束了，用户的信息已经保存在了 userInfo 变量中，在需要使用到用户变量的地方，先创建 AppDelegate 的实例，然后 AppDelegate.userInfo 即可调用了。</p><p>我主要借鉴了这篇文章里的方法，http://www.jb51.net/article/78916.htm。 然后对其中一些数据的格式转换等进行了调整，使之能够成功运行。</p><p>做的 demo 链接：http://download.csdn.net/detail/cooldiok/9584859， 下载下来后需要在 weixinInfo.h 里写上自己的帐号相关信息才能正常运行。</p><p>样图： <img src="/blog_images/wechat-ios-login/10.png" alt="10"></p>',33),d={},k=(0,a(3744).Z)(d,[["render",function(n,s){const a=(0,t.up)("RouterLink"),d=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,p,o,(0,t._)("nav",i,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Wm)(a,{to:"#_1-下载-ios-微信-sdk"},{default:(0,t.w5)((()=>[(0,t.Uk)("1.下载 iOS 微信 SDK")])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#_2-把-sdk-放到工程中-直接拖进去即可"},{default:(0,t.w5)((()=>[(0,t.Uk)("2.把 SDK 放到工程中（直接拖进去即可）")])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#_3-导入一些依赖框架和手动添加-afnetworking-框架"},{default:(0,t.w5)((()=>[(0,t.Uk)("3.导入一些依赖框架和手动添加 AFNetworking 框架")])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#_4-添加-url-types-添加-ios9-urlschemes-添加-ats"},{default:(0,t.w5)((()=>[(0,t.Uk)("4.添加 URL Types，添加 IOS9 URLSchemes，添加 ATS")])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#_5-在-appdelegate-h-中声明一个变量来保存用户成功登陆后的个人信息-声明一个方法来能够外部调用-为了不-dry"},{default:(0,t.w5)((()=>[(0,t.Uk)("5.在 AppDelegate.h 中声明一个变量来保存用户成功登陆后的个人信息，声明一个方法来能够外部调用（为了不 DRY）")])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#_6-新建一个-weixininfo-h-的文件来保存微信的-id-secret-等相关的信息-然后在其他文件里导入这个头文件就能使用这些变量了-以后如果有相关的修改的话-这样比较便捷和安全"},{default:(0,t.w5)((()=>[(0,t.Uk)("6.新建一个 weixinInfo.h 的文件来保存微信的 id,secret 等相关的信息，然后在其他文件里导入这个头文件就能使用这些变量了，以后如果有相关的修改的话，这样比较便捷和安全")])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#_7-向微信终端程序注册第三方应用-并在第三方应用实现从微信返回"},{default:(0,t.w5)((()=>[(0,t.Uk)("7.向微信终端程序注册第三方应用，并在第三方应用实现从微信返回")])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#_8-请求-code"},{default:(0,t.w5)((()=>[(0,t.Uk)("8.请求 code")])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#_9-授权后回调"},{default:(0,t.w5)((()=>[(0,t.Uk)("9.授权后回调")])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#_10-获取用户信息-unionid-机制"},{default:(0,t.w5)((()=>[(0,t.Uk)("10.获取用户信息（UnionID 机制）")])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#_11-总结"},{default:(0,t.w5)((()=>[(0,t.Uk)("11.总结")])),_:1})])])]),c,(0,t._)("p",null,[(0,t._)("a",l,[(0,t.Uk)("下载地址"),(0,t.Wm)(d)]),u]),r],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);