"use strict";(self.webpackChunkcclc_vuepress=self.webpackChunkcclc_vuepress||[]).push([[8057],{5989:(n,e,a)=>{a.r(e),a.d(e,{data:()=>s});const s={key:"v-ad6ec646",path:"/backend/mvc5-i18n.html",title:"ASP.NET MVC多语言 仿微软网站效果",lang:"zh-CN",frontmatter:{title:"ASP.NET MVC多语言 仿微软网站效果",date:"2017-10-22",categories:[".NET"],tags:[".NET"]},excerpt:"",headers:[{level:2,title:"1.创建语言文件",slug:"_1-创建语言文件",children:[]},{level:2,title:"2.创建一个过滤器",slug:"_2-创建一个过滤器",children:[]},{level:2,title:"3.配置路由文件",slug:"_3-配置路由文件",children:[]},{level:2,title:"4.修改 HomeController.cs 文件，添加修改语言函数",slug:"_4-修改-homecontroller-cs-文件-添加修改语言函数",children:[]},{level:2,title:"5.修改母版页，添加了修改语言的 link",slug:"_5-修改母版页-添加了修改语言的-link",children:[]},{level:2,title:"6.Views/Home 的三个页面我都加了显示 ViewBag.Title 值的代码",slug:"_6-views-home-的三个页面我都加了显示-viewbag-title-值的代码",children:[]},{level:2,title:"7.运行",slug:"_7-运行",children:[]},{level:2,title:"8.重定向",slug:"_8-重定向",children:[]}],git:{},filePathRelative:"backend/mvc5-i18n.md"}},9523:(n,e,a)=>{a.r(e),a.d(e,{default:()=>k});var s=a(6252);const i=(0,s._)("h1",{id:"asp-net-mvc-多语言-仿微软网站效果",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#asp-net-mvc-多语言-仿微软网站效果","aria-hidden":"true"},"#"),(0,s.Uk)(" ASP.NET MVC 多语言 仿微软网站效果")],-1),t=(0,s._)("p",null,"微软作为 ASP.NET 的创造者，它对于官网的结构设计肯定有值得我们借鉴和参考的地方.",-1),l=(0,s._)("p",null,"本项目是基于 VS2017 pro 开发的，将从你已经创建了一个 MVC 项目开始介绍：",-1),u={class:"table-of-contents"},o=(0,s.uE)('<p>流程图 <img src="/blog_images/mvc5-i18n/1.png" alt="1"></p><h2 id="_1-创建语言文件" tabindex="-1"><a class="header-anchor" href="#_1-创建语言文件" aria-hidden="true">#</a> 1.创建语言文件</h2><p>创建 App_GlobalResources 文件夹 <img src="/blog_images/mvc5-i18n/2.png" alt="2"> 创建 Language 文件夹 <img src="/blog_images/mvc5-i18n/3.png" alt="3"> 创建资源文件 <img src="/blog_images/mvc5-i18n/4.png" alt="4"> 这些操作做完后，目录结构应该是以下这样的 <img src="/blog_images/mvc5-i18n/5.png" alt="5"> 我们打开每个资源文件，在里面添加一条 TiTle 数据 <img src="/blog_images/mvc5-i18n/6.png" alt="6"><strong>我推荐使用 ResX Manager 来管理语言文件</strong> 比如我已经创建了中文、英语、日语这三个语言文件，我如果要做修改的话就需要每个文件轮流修改，使用 ResX Manager 就能直接同时修改这三个语言文件，它还提供语言翻译功能。具体使用方法与此文无关，就不再赘述了。 <img src="/blog_images/mvc5-i18n/7.png" alt="7"></p><h2 id="_2-创建一个过滤器" tabindex="-1"><a class="header-anchor" href="#_2-创建一个过滤器" aria-hidden="true">#</a> 2.创建一个过滤器</h2><p><img src="/blog_images/mvc5-i18n/8.png" alt="8"></p><div class="language-asp ext-asp line-numbers-mode"><pre class="language-asp"><code>namespace MvcEdu.Filters\n{\n    public class LocalizationAttribute : ActionFilterAttribute\n    {\n        public override void OnActionExecuting(ActionExecutingContext filterContext)\n        {\n\n            bool isSkipLocalization = filterContext.ActionDescriptor.IsDefined(typeof(WithoutLocalizationAttribute), inherit: true) || filterContext.ActionDescriptor.ControllerDescriptor.IsDefined(typeof(WithoutLocalizationAttribute), inherit: true);\n\n            if (!isSkipLocalization)\n            {\n                if (filterContext.RouteData.Values[&quot;lang&quot;] != null &amp;&amp; !string.IsNullOrWhiteSpace(filterContext.RouteData.Values[&quot;lang&quot;].ToString()))\n                {\n                    ///从路由数据(url)里设置语言\n                    var lang = filterContext.RouteData.Values[&quot;lang&quot;].ToString();\n                    Thread.CurrentThread.CurrentUICulture = CultureInfo.CreateSpecificCulture(lang);\n                }\n                else\n                {\n                    ///从cookie里读取语言设置\n                    var cookie = filterContext.HttpContext.Request.Cookies[&quot;Localization.CurrentUICulture&quot;];\n                    var langHeader = string.Empty;\n                    if (cookie != null &amp;&amp; cookie.Value != &quot;&quot;)\n                    {\n                        ///根据cookie设置语言\n                        langHeader = cookie.Value;\n                        Thread.CurrentThread.CurrentUICulture = CultureInfo.CreateSpecificCulture(langHeader);\n                    }\n                    else\n                    {\n                        ///如果读取cookie失败则设置默认语言\n                        langHeader = filterContext.HttpContext.Request.UserLanguages[0];\n                        Thread.CurrentThread.CurrentUICulture = CultureInfo.CreateSpecificCulture(langHeader);\n                    }\n                    ///把语言值设置到路由值里\n                    filterContext.RouteData.Values[&quot;lang&quot;] = langHeader;\n                    //如果url中不包含语言设置则重定向到包含语言值设置的url里\n                    string ReturnUrl = $&quot;/{filterContext.RouteData.Values[&quot;lang&quot;]}/{filterContext.RouteData.Values[&quot;controller&quot;]}/{filterContext.RouteData.Values[&quot;action&quot;]}&quot;;\n                    filterContext.Result = new RedirectResult(ReturnUrl);\n                }\n\n                /// 把设置保存进cookie\n                HttpCookie _cookie = new HttpCookie(&quot;Localization.CurrentUICulture&quot;, Thread.CurrentThread.CurrentUICulture.Name);\n                _cookie.Expires = DateTime.Now.AddYears(1);\n                filterContext.HttpContext.Response.SetCookie(_cookie);\n\n                base.OnActionExecuting(filterContext);\n            }\n\n        }\n    }\n\n    public class WithoutLocalizationAttribute : Attribute\n    {\n    }\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-配置路由文件" tabindex="-1"><a class="header-anchor" href="#_3-配置路由文件" aria-hidden="true">#</a> 3.配置路由文件</h2><p>我这边因为只有三个语言文件，所以我对于语言项的输入做了限制。</p><div class="language-asp ext-asp line-numbers-mode"><pre class="language-asp"><code>namespace MvcEdu\n{\n    public class RouteConfig\n    {\n        public static void RegisterRoutes(RouteCollection routes)\n        {\n            routes.IgnoreRoute(&quot;{resource}.axd/{*pathInfo}&quot;);\n\n            routes.MapRoute(\n              name: &quot;Localization&quot;, // 路由名称\n              url: &quot;{lang}/{controller}/{action}/{id}&quot;, // 带有参数的 URL\\\n              constraints: new { lang = &quot;zh-CN|en-US|ja-JP&quot; }, //限制可输入的语言项\n              defaults: new { controller = &quot;Home&quot;, action = &quot;Index&quot;, id = UrlParameter.Optional }//参数默认值\n            );\n\n            routes.MapRoute(\n                name: &quot;Default&quot;,\n                url: &quot;{controller}/{action}/{id}&quot;,\n                defaults: new { controller = &quot;Home&quot;, action = &quot;Index&quot;, id = UrlParameter.Optional }\n            );\n        }\n    }\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-修改-homecontroller-cs-文件-添加修改语言函数" tabindex="-1"><a class="header-anchor" href="#_4-修改-homecontroller-cs-文件-添加修改语言函数" aria-hidden="true">#</a> 4.修改 HomeController.cs 文件，添加修改语言函数</h2><div class="language-asp ext-asp line-numbers-mode"><pre class="language-asp"><code>namespace MvcEdu.Controllers\n{\n    [Localization] //HomeController里的函数都要走Localization过滤器\n    public class HomeController : Controller\n    {\n        public ActionResult Index()\n        {\n            ViewBag.Title = Resources.Language.Title;//页面中的Title值取语言文件里的Title值\n            return View();\n        }\n\n        public ActionResult About()\n        {\n            ViewBag.Title = Resources.Language.Title;//页面中的Title值取语言文件里的Title值\n            ViewBag.Message = &quot;Your application description page.&quot;;\n\n            return View();\n        }\n\n        public ActionResult Contact()\n        {\n            ViewBag.Title = Resources.Language.Title;//页面中的Title值取语言文件里的Title值\n            ViewBag.Message = &quot;Your contact page.&quot;;\n\n            return View();\n        }\n        [WithoutLocalization]//这个函数不走Localization过滤器\n        public ActionResult ChangeLanguage(String NewLang, String ReturnUrl)\n        {\n            if (!ReturnUrl.EndsWith(&quot;/&quot;))\n            {\n                ReturnUrl += &quot;/&quot;;\n            }\n            //use NewLang replace old lang,include input judgment\n            if (!string.IsNullOrEmpty(ReturnUrl) &amp;&amp; ReturnUrl.Length &gt; 3 &amp;&amp; ReturnUrl.StartsWith(&quot;/&quot;) &amp;&amp; ReturnUrl.IndexOf(&quot;/&quot;, 1) &gt; 0 &amp;&amp; new string[] { &quot;zh-CN&quot;, &quot;en-US&quot;,&quot;ja-JP&quot; }.Contains(ReturnUrl.Substring(1, ReturnUrl.IndexOf(&quot;/&quot;, 1) - 1)))\n            {\n                ReturnUrl = $&quot;/{NewLang}{ReturnUrl.Substring(ReturnUrl.IndexOf(&quot;/&quot;, 1))}&quot;;\n            }\n            else\n            {\n                ReturnUrl = $&quot;/{NewLang}{ReturnUrl}&quot;;\n            }\n            return Redirect(ReturnUrl);//redirect to new url\n        }\n    }\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：我在使用 vs2015 express for web 时，出现了使用 Resources.Language 时智能提示没出现 Title 的情况，此时去找一下 Language.designer.cs 里有无以下代码，如果没有的话则以后添加键值对的时候你们都要在此手动添加，或者把 Language 文件夹建在 Controllers 的同级目录下然后再新建资源文件等操作也能解决该问题。</strong></p><div class="language-asp ext-asp line-numbers-mode"><pre class="language-asp"><code>/// &lt;summary&gt;\n///  查找类似 标题 的本地化字符串。\n/// &lt;/summary&gt;\ninternal static string Title {\n    get {\n        return ResourceManager.GetString(&quot;Title&quot;, resourceCulture);\n    }\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-修改母版页-添加了修改语言的-link" tabindex="-1"><a class="header-anchor" href="#_5-修改母版页-添加了修改语言的-link" aria-hidden="true">#</a> 5.修改母版页，添加了修改语言的 link</h2><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar-collapse collapse<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav navbar-nav<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>@Html.ActionLink(&quot;主页&quot;, &quot;Index&quot;, &quot;Home&quot;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>@Html.ActionLink(&quot;关于&quot;, &quot;About&quot;, &quot;Home&quot;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>@Html.ActionLink(&quot;联系方式&quot;, &quot;Contact&quot;, &quot;Home&quot;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    @*以下是添加的内容*@\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n      @Html.ActionLink(&quot;en-US&quot;, &quot;ChangeLanguage&quot;, &quot;Home&quot;,new { NewLang =\n      &quot;en-US&quot;,ReturnUrl=Request.RawUrl},new { @class=&quot;testclass&quot;})\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n      @Html.ActionLink(&quot;zh-CN&quot;, &quot;ChangeLanguage&quot;, &quot;Home&quot;, new { NewLang =\n      &quot;zh-CN&quot;, ReturnUrl = Request.RawUrl }, new { @class = &quot;testclass&quot; })\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n      @Html.ActionLink(&quot;ja-JP&quot;, &quot;ChangeLanguage&quot;, &quot;Home&quot;, new { NewLang =\n      &quot;ja-JP&quot;, ReturnUrl = Request.RawUrl }, new { @class = &quot;testclass&quot; })\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-views-home-的三个页面我都加了显示-viewbag-title-值的代码" tabindex="-1"><a class="header-anchor" href="#_6-views-home-的三个页面我都加了显示-viewbag-title-值的代码" aria-hidden="true">#</a> 6.Views/Home 的三个页面我都加了显示 ViewBag.Title 值的代码</h2><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>@ViewBag.Title.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_7-运行" tabindex="-1"><a class="header-anchor" href="#_7-运行" aria-hidden="true">#</a> 7.运行</h2><p>现在我们来运行，看一下效果 首次登录的时候因为 url 是 localhost:50062/，没有语言项，所以读取浏览器默认语言“zh-CN”,然后重定向。 <img src="/blog_images/mvc5-i18n/9.png" alt="9"></p><p>以下是点击导航栏的 en-US 和 ja-JP 时的情况 <img src="/blog_images/mvc5-i18n/10.png" alt="10"><img src="/blog_images/mvc5-i18n/11.png" alt="11"></p><h2 id="_8-重定向" tabindex="-1"><a class="header-anchor" href="#_8-重定向" aria-hidden="true">#</a> 8.重定向</h2>',21),r={href:"http://localhost:50062/Home/Index/",target:"_blank",rel:"noopener noreferrer"},c={href:"http://localhost:50062/cookie",target:"_blank",rel:"noopener noreferrer"},d=(0,s._)("p",null,"基本做到了和 MSDN 效果一样。",-1),v={href:"https://pan.baidu.com/s/1EmXVVdzMGVO5HWfsbbfa7Q",target:"_blank",rel:"noopener noreferrer"},p=(0,s._)("br",null,null,-1),m={href:"http://www.cnblogs.com/zoro-zero/p/6674442.html",target:"_blank",rel:"noopener noreferrer"},g={href:"http://www.cnblogs.com/CameronWu/p/5709442.html",target:"_blank",rel:"noopener noreferrer"},b={},k=(0,a(3744).Z)(b,[["render",function(n,e){const a=(0,s.up)("RouterLink"),b=(0,s.up)("ExternalLinkIcon");return(0,s.wg)(),(0,s.iD)(s.HY,null,[i,t,l,(0,s._)("nav",u,[(0,s._)("ul",null,[(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_1-创建语言文件"},{default:(0,s.w5)((()=>[(0,s.Uk)("1.创建语言文件")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_2-创建一个过滤器"},{default:(0,s.w5)((()=>[(0,s.Uk)("2.创建一个过滤器")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_3-配置路由文件"},{default:(0,s.w5)((()=>[(0,s.Uk)("3.配置路由文件")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_4-修改-homecontroller-cs-文件-添加修改语言函数"},{default:(0,s.w5)((()=>[(0,s.Uk)("4.修改 HomeController.cs 文件，添加修改语言函数")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_5-修改母版页-添加了修改语言的-link"},{default:(0,s.w5)((()=>[(0,s.Uk)("5.修改母版页，添加了修改语言的 link")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_6-views-home-的三个页面我都加了显示-viewbag-title-值的代码"},{default:(0,s.w5)((()=>[(0,s.Uk)("6.Views/Home 的三个页面我都加了显示 ViewBag.Title 值的代码")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_7-运行"},{default:(0,s.w5)((()=>[(0,s.Uk)("7.运行")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_8-重定向"},{default:(0,s.w5)((()=>[(0,s.Uk)("8.重定向")])),_:1})])])]),o,(0,s._)("p",null,[(0,s.Uk)("如果用户直接输入"),(0,s._)("a",r,[(0,s.Uk)("http://localhost:50062/Home/Index/"),(0,s.Wm)(b)]),(0,s.Uk)("程序会重定向到"),(0,s._)("a",c,[(0,s.Uk)("http://localhost:50062/cookie"),(0,s.Wm)(b)]),(0,s.Uk)("里保存的语言项 OR 浏览器默认语言/Home/Index/")]),d,(0,s._)("p",null,[(0,s.Uk)("demo 下载： 链接: "),(0,s._)("a",v,[(0,s.Uk)("https://pan.baidu.com/s/1EmXVVdzMGVO5HWfsbbfa7Q"),(0,s.Wm)(b)]),(0,s.Uk)(" 密码: 8b6h")]),(0,s._)("p",null,[(0,s.Uk)("本文参考了："),p,(0,s._)("a",m,[(0,s.Uk)("http://www.cnblogs.com/zoro-zero/p/6674442.html"),(0,s.Wm)(b)]),(0,s._)("a",g,[(0,s.Uk)("http://www.cnblogs.com/CameronWu/p/5709442.html"),(0,s.Wm)(b)])])],64)}]])},3744:(n,e)=>{e.Z=(n,e)=>{const a=n.__vccOpts||n;for(const[n,s]of e)a[n]=s;return a}}}]);