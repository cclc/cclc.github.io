"use strict";(self.webpackChunkcclc_vuepress=self.webpackChunkcclc_vuepress||[]).push([[2600],{7848:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-6e3157b7",path:"/nodejs/nodejs-imagemagick.html",title:"NodeJS调用ImageMagick",lang:"zh-CN",frontmatter:{title:"NodeJS调用ImageMagick",date:"2017-03-16",categories:["NodeJS"],tags:["macOS","NodeJS"]},excerpt:"",headers:[{level:2,title:"1.在 MAC 上安装 homebrew",slug:"_1-在-mac-上安装-homebrew",children:[]},{level:2,title:"2.用 homebrew 安装 ImageMagick",slug:"_2-用-homebrew-安装-imagemagick",children:[]},{level:2,title:"3.使用 nodejs 来调用",slug:"_3-使用-nodejs-来调用",children:[{level:3,title:"3.1 命令行",slug:"_3-1-命令行",children:[]},{level:3,title:"3.2im 模块",slug:"_3-2im-模块",children:[]},{level:3,title:"3.3gm",slug:"_3-3gm",children:[]}]}],git:{},filePathRelative:"nodejs/nodejs-imagemagick.md"}},5125:(n,s,a)=>{a.r(s),a.d(s,{default:()=>v});var e=a(6252);const t=(0,e._)("h1",{id:"nodejs-调用-imagemagick",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#nodejs-调用-imagemagick","aria-hidden":"true"},"#"),(0,e.Uk)(" NodeJS 调用 ImageMagick")],-1),p=(0,e._)("div",{class:"custom-container tip"},[(0,e._)("p",{class:"custom-container-title"},"TIP"),(0,e._)("p",null,"本教程讲的是用 homebrew 安装 ImageMagick，用 Nodejs 调用 ImageMagick。")],-1),o={class:"table-of-contents"},c=(0,e._)("h2",{id:"_1-在-mac-上安装-homebrew",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#_1-在-mac-上安装-homebrew","aria-hidden":"true"},"#"),(0,e.Uk)(" 1.在 MAC 上安装 homebrew")],-1),i={href:"https://brew.sh/index_zh-cn.html",target:"_blank",rel:"noopener noreferrer"},l=(0,e.uE)('<h2 id="_2-用-homebrew-安装-imagemagick" tabindex="-1"><a class="header-anchor" href="#_2-用-homebrew-安装-imagemagick" aria-hidden="true">#</a> 2.用 homebrew 安装 ImageMagick</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>brew <span class="token function">install</span> ImageMagick\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完成后可以在终端里输入 convert，如果跳出来一堆说明，则安装成功</p><h2 id="_3-使用-nodejs-来调用" tabindex="-1"><a class="header-anchor" href="#_3-使用-nodejs-来调用" aria-hidden="true">#</a> 3.使用 nodejs 来调用</h2><p>这里我演示三种调用的方式：</p><h3 id="_3-1-命令行" tabindex="-1"><a class="header-anchor" href="#_3-1-命令行" aria-hidden="true">#</a> 3.1 命令行</h3>',6),u={href:"http://www.imagemagick.org/script/command-line-tools.php",target:"_blank",rel:"noopener noreferrer"},r=(0,e.uE)('<p>在终端里的写法 此处的 67x57 表示宽度 67 像素，高度 57 像素。 还可以用%的写法，如 67%x57%。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>convert <span class="token parameter variable">-resize</span> 67x57 input_pic_path output_pic_path\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我这里使用 nodejs 创建子进程来执行我们的命令</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> exec <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;child_process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec<span class="token punctuation">;</span>\n<span class="token keyword">var</span> cmdStr <span class="token operator">=</span> <span class="token string">&quot;convert -resize 67x57 input_pic_path output_pic_path&quot;</span><span class="token punctuation">;</span>\n<span class="token function">exec</span><span class="token punctuation">(</span>cmdStr<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;error: &quot;</span> <span class="token operator">+</span> stderr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;success: &quot;</span> <span class="token operator">+</span> stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2im-模块" tabindex="-1"><a class="header-anchor" href="#_3-2im-模块" aria-hidden="true">#</a> 3.2im 模块</h3>',5),k={href:"https://www.npmjs.com/package/imagemagick",target:"_blank",rel:"noopener noreferrer"},d=(0,e.uE)('<p>im 模块是 Imagemagick 官方的调用模块，但是已经很久没有更新过了，而且以后也不会更新</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> im <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;imagemagick&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nim<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>\n  <span class="token punctuation">[</span><span class="token string">&quot;input_pic_path&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-resize&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;25x120&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;output_pic_path&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stdout</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;stdout:&quot;</span><span class="token punctuation">,</span> stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3gm" tabindex="-1"><a class="header-anchor" href="#_3-3gm" aria-hidden="true">#</a> 3.3gm</h3>',3),m={href:"https://www.npmjs.com/package/gm",target:"_blank",rel:"noopener noreferrer"},g=(0,e.uE)('<p>它支持 GraphicsMagick 和 ImageMagick，并且还在持续更新中，<strong>我建议使用这种方法，因为可以报 bug。</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> gm <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;gm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">imageMagick</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">gm</span><span class="token punctuation">(</span><span class="token string">&quot;input/Desert.jpg&quot;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">240</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">noProfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;output/Desert.jpg&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2),h={},v=(0,a(3744).Z)(h,[["render",function(n,s){const a=(0,e.up)("RouterLink"),h=(0,e.up)("ExternalLinkIcon");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,p,(0,e._)("nav",o,[(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_1-在-mac-上安装-homebrew"},{default:(0,e.w5)((()=>[(0,e.Uk)("1.在 MAC 上安装 homebrew")])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_2-用-homebrew-安装-imagemagick"},{default:(0,e.w5)((()=>[(0,e.Uk)("2.用 homebrew 安装 ImageMagick")])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_3-使用-nodejs-来调用"},{default:(0,e.w5)((()=>[(0,e.Uk)("3.使用 nodejs 来调用")])),_:1}),(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_3-1-命令行"},{default:(0,e.w5)((()=>[(0,e.Uk)("3.1 命令行")])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_3-2im-模块"},{default:(0,e.w5)((()=>[(0,e.Uk)("3.2im 模块")])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_3-3gm"},{default:(0,e.w5)((()=>[(0,e.Uk)("3.3gm")])),_:1})])])])])]),c,(0,e._)("p",null,[(0,e._)("a",i,[(0,e.Uk)("https://brew.sh/index_zh-cn.html"),(0,e.Wm)(h)])]),l,(0,e._)("p",null,[(0,e._)("a",u,[(0,e.Uk)("http://www.imagemagick.org/script/command-line-tools.php"),(0,e.Wm)(h)])]),r,(0,e._)("p",null,[(0,e._)("a",k,[(0,e.Uk)("https://www.npmjs.com/package/imagemagick"),(0,e.Wm)(h)])]),d,(0,e._)("p",null,[(0,e._)("a",m,[(0,e.Uk)("https://www.npmjs.com/package/gm"),(0,e.Wm)(h)])]),g],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);