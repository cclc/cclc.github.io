"use strict";(self.webpackChunkcclc_vuepress=self.webpackChunkcclc_vuepress||[]).push([[2744],{4527:(e,n,a)=>{a.r(n),a.d(n,{data:()=>s});const s={key:"v-002d3872",path:"/docker/win-server-2016-docker.html",title:"Windows server 2016下配置Docker",lang:"zh-CN",frontmatter:{title:"Windows server 2016下配置Docker",date:"2017-01-11",categories:["Docker"],tags:["Docker"]},excerpt:"",headers:[{level:2,title:"1.找到并开启 hyper-v",slug:"_1-找到并开启-hyper-v",children:[]},{level:2,title:"2.我们先在“操作”里新建一个“虚拟交换机”来让我们的虚拟机能够上网",slug:"_2-我们先在-操作-里新建一个-虚拟交换机-来让我们的虚拟机能够上网",children:[]},{level:2,title:'3."指定代数"建议选择第二代',slug:"_3-指定代数-建议选择第二代",children:[]},{level:2,title:"4.虚拟机设置完成后，你可以选中虚拟机然后在右边的设置中设置更详细的参数，如 CPU 的核数，是否开机自启动等",slug:"_4-虚拟机设置完成后-你可以选中虚拟机然后在右边的设置中设置更详细的参数-如-cpu-的核数-是否开机自启动等",children:[]},{level:2,title:"5.设置完成后，就能启动虚拟机了",slug:"_5-设置完成后-就能启动虚拟机了",children:[]},{level:2,title:"6.进入虚拟机后",slug:"_6-进入虚拟机后",children:[]},{level:2,title:"7.hyper-v 安装完毕后，更新系统，保持系统为最新版本后就能开始安装 docker 了",slug:"_7-hyper-v-安装完毕后-更新系统-保持系统为最新版本后就能开始安装-docker-了",children:[]},{level:2,title:"8.在 windows server 2016 中还要设置下防火墙来确保 docker 能上网",slug:"_8-在-windows-server-2016-中还要设置下防火墙来确保-docker-能上网",children:[]},{level:2,title:"9.测试",slug:"_9-测试",children:[]},{level:2,title:"10.安装第一个 docker 容器",slug:"_10-安装第一个-docker-容器",children:[]}],git:{},filePathRelative:"docker/win-server-2016-docker.md"}},4777:(e,n,a)=>{a.r(n),a.d(n,{default:()=>k});var s=a(6252);const r=(0,s._)("h1",{id:"windows-server-2016-下配置-docker",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#windows-server-2016-下配置-docker","aria-hidden":"true"},"#"),(0,s.Uk)(" Windows server 2016 下配置 Docker")],-1),l=(0,s._)("p",null,"本教程适用于通过 windows 8 以上系统自带的 hyper-v 来安装系统为 windows server 2016 的虚拟机，然后在虚拟机中配置 Docker",-1),i=(0,s._)("p",null,"写教程时的环境：win10.1067",-1),o={class:"table-of-contents"},t=(0,s.uE)('<h2 id="_1-找到并开启-hyper-v" tabindex="-1"><a class="header-anchor" href="#_1-找到并开启-hyper-v" aria-hidden="true">#</a> 1.找到并开启 hyper-v</h2><h2 id="_2-我们先在-操作-里新建一个-虚拟交换机-来让我们的虚拟机能够上网" tabindex="-1"><a class="header-anchor" href="#_2-我们先在-操作-里新建一个-虚拟交换机-来让我们的虚拟机能够上网" aria-hidden="true">#</a> 2.我们先在“操作”里新建一个“虚拟交换机”来让我们的虚拟机能够上网</h2><p>建议选择外部，配置起来方便</p><h2 id="_3-指定代数-建议选择第二代" tabindex="-1"><a class="header-anchor" href="#_3-指定代数-建议选择第二代" aria-hidden="true">#</a> 3.&quot;指定代数&quot;建议选择第二代</h2><p>选择我们刚才设置的虚拟交换机</p><p>其余的都和我们在其他虚拟机软件中新建虚拟机一样，设置光驱之类的</p><h2 id="_4-虚拟机设置完成后-你可以选中虚拟机然后在右边的设置中设置更详细的参数-如-cpu-的核数-是否开机自启动等" tabindex="-1"><a class="header-anchor" href="#_4-虚拟机设置完成后-你可以选中虚拟机然后在右边的设置中设置更详细的参数-如-cpu-的核数-是否开机自启动等" aria-hidden="true">#</a> 4.虚拟机设置完成后，你可以选中虚拟机然后在右边的设置中设置更详细的参数，如 CPU 的核数，是否开机自启动等</h2><h2 id="_5-设置完成后-就能启动虚拟机了" tabindex="-1"><a class="header-anchor" href="#_5-设置完成后-就能启动虚拟机了" aria-hidden="true">#</a> 5.设置完成后，就能启动虚拟机了</h2><p>虚拟机启动后不会弹出运行画面，你需要点击上一部“设置”上面的“连接”来连接到虚拟机</p><h2 id="_6-进入虚拟机后" tabindex="-1"><a class="header-anchor" href="#_6-进入虚拟机后" aria-hidden="true">#</a> 6.进入虚拟机后</h2><p>你添加 hyper-v 时，系统会提示你没有开启虚拟化</p><p>这个时候你要用管理员开启 powershell，输入</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Set-VMProcessor <span class="token parameter variable">-VMName</span> server2016 <span class="token parameter variable">-ExposeVirtualizationExtensions</span> <span class="token variable">$true</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>命令中的 server2016 是我虚拟机的名字，你们改为自己虚拟机的名字即可</p><p>在 hyper-v 管理器中没有开启 CPU 虚拟化的地方，只能通过这条命令来实现。</p><h2 id="_7-hyper-v-安装完毕后-更新系统-保持系统为最新版本后就能开始安装-docker-了" tabindex="-1"><a class="header-anchor" href="#_7-hyper-v-安装完毕后-更新系统-保持系统为最新版本后就能开始安装-docker-了" aria-hidden="true">#</a> 7.hyper-v 安装完毕后，更新系统，保持系统为最新版本后就能开始安装 docker 了</h2><p>server 2016 中的 docker 和 win10 下的安装方式又不一样了，要在以管理员身份运行的 powershell 中运行命令来安装</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Install-PackageProvider <span class="token parameter variable">-Name</span> NuGet <span class="token parameter variable">-MinimumVersion</span> <span class="token number">2.8</span>.5.201 <span class="token parameter variable">-Force</span>\n\nInstall-Module <span class="token parameter variable">-Name</span> DockerMsftProvider <span class="token parameter variable">-Force</span>\n\nInstall-Package <span class="token parameter variable">-Name</span> <span class="token function">docker</span> <span class="token parameter variable">-ProviderName</span> DockerMsftProvider <span class="token parameter variable">-Force</span>\n\nRestart-Computer <span class="token parameter variable">-Force</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-在-windows-server-2016-中还要设置下防火墙来确保-docker-能上网" tabindex="-1"><a class="header-anchor" href="#_8-在-windows-server-2016-中还要设置下防火墙来确保-docker-能上网" aria-hidden="true">#</a> 8.在 windows server 2016 中还要设置下防火墙来确保 docker 能上网</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Open firewall port 2375</span>\nnetsh advfirewall firewall <span class="token function">add</span> rule <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">&quot;docker engine&quot;</span> <span class="token assign-left variable">dir</span><span class="token operator">=</span>in <span class="token assign-left variable">action</span><span class="token operator">=</span>allow <span class="token assign-left variable">protocol</span><span class="token operator">=</span>TCP <span class="token assign-left variable">localport</span><span class="token operator">=</span><span class="token number">2375</span>\n\n<span class="token comment"># Configure Docker daemon to listen on both pipe and TCP (replaces docker --register-service invocation above)</span>\nStop-Service <span class="token function">docker</span>\ndockerd --unregister-service\ndockerd <span class="token parameter variable">-H</span> npipe:// <span class="token parameter variable">-H</span> <span class="token number">0.0</span>.0.0:2375 --register-service\nStart-Service <span class="token function">docker</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-测试" tabindex="-1"><a class="header-anchor" href="#_9-测试" aria-hidden="true">#</a> 9.测试</h2><p>在 powershell 中输入 docker version 应该会出现</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Client:\nVersion:      <span class="token number">1.12</span>.1\nAPI version:  <span class="token number">1.24</span>\nGo version:   go1.6.3\nGit commit:   23cf638\nBuilt:        Thu Aug <span class="token number">18</span> <span class="token number">17</span>:32:24 <span class="token number">2016</span>\nOS/Arch:      windows/amd64\nExperimental: <span class="token boolean">true</span>\n\nServer:\nVersion:      <span class="token number">1.12</span>.2-cs2-ws-beta\nAPI version:  <span class="token number">1.25</span>\nGo version:   go1.7.1\nGit commit:   62d9ff9\nBuilt:        Fri Sep <span class="token number">23</span> <span class="token number">20</span>:50:29 <span class="token number">2016</span>\nOS/Arch:      windows/amd64\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-安装第一个-docker-容器" tabindex="-1"><a class="header-anchor" href="#_10-安装第一个-docker-容器" aria-hidden="true">#</a> 10.安装第一个 docker 容器</h2><p>使用 docker run 来部署一个,net core helloworld 官方应用程序镜像</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker</span> run microsoft/dotnet-samples:dotnetapp-nanoserver\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>看到以下内容时表示你已经配置成功了</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Unable to <span class="token function">find</span> image <span class="token string">&#39;microsoft/dotnet-samples:dotnetapp-nanoserver&#39;</span> locally\ndotnetapp-nanoserver: Pulling from microsoft/dotnet-samples\n5496abde368a: Downloading <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">=</span><span class="token operator">&gt;</span>                                               <span class="token punctuation">]</span>  <span class="token number">14.6</span> MB/242.6 MB\n482ab31872a2: Downloading <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token operator">&gt;</span>                                         <span class="token punctuation">]</span> <span class="token number">19.46</span> MB/100.5 MB\ndf00079eb06a: Download complete\n79730b122a0a: Download complete\ne2f5db19e1d2: Downloading <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">=</span><span class="token operator">&gt;</span>                                               <span class="token punctuation">]</span> <span class="token number">2.293</span> MB/32.48 MB\nc34ebc4d7351: Waiting\n8c97c2cd28c1: Waiting\n6bd62be70d1c: Waiting\n9b45b5fe5811: Waiting\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',28),d={href:"https://blog.docker.com/2016/09/build-your-first-docker-windows-server-container/",target:"_blank",rel:"noopener noreferrer"},c={href:"http://blog.csdn.net/candy_ilync/article/details/52794834",target:"_blank",rel:"noopener noreferrer"},p=(0,s._)("p",null,"Windows server 2016 下载地址：",-1),v={href:"https://www.microsoft.com/en-us/evalcenter/evaluate-hyper-v-server-2016",target:"_blank",rel:"noopener noreferrer"},u={},k=(0,a(3744).Z)(u,[["render",function(e,n){const a=(0,s.up)("RouterLink"),u=(0,s.up)("ExternalLinkIcon");return(0,s.wg)(),(0,s.iD)(s.HY,null,[r,l,i,(0,s._)("nav",o,[(0,s._)("ul",null,[(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_1-找到并开启-hyper-v"},{default:(0,s.w5)((()=>[(0,s.Uk)("1.找到并开启 hyper-v")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_2-我们先在-操作-里新建一个-虚拟交换机-来让我们的虚拟机能够上网"},{default:(0,s.w5)((()=>[(0,s.Uk)("2.我们先在“操作”里新建一个“虚拟交换机”来让我们的虚拟机能够上网")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_3-指定代数-建议选择第二代"},{default:(0,s.w5)((()=>[(0,s.Uk)('3."指定代数"建议选择第二代')])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_4-虚拟机设置完成后-你可以选中虚拟机然后在右边的设置中设置更详细的参数-如-cpu-的核数-是否开机自启动等"},{default:(0,s.w5)((()=>[(0,s.Uk)("4.虚拟机设置完成后，你可以选中虚拟机然后在右边的设置中设置更详细的参数，如 CPU 的核数，是否开机自启动等")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_5-设置完成后-就能启动虚拟机了"},{default:(0,s.w5)((()=>[(0,s.Uk)("5.设置完成后，就能启动虚拟机了")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_6-进入虚拟机后"},{default:(0,s.w5)((()=>[(0,s.Uk)("6.进入虚拟机后")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_7-hyper-v-安装完毕后-更新系统-保持系统为最新版本后就能开始安装-docker-了"},{default:(0,s.w5)((()=>[(0,s.Uk)("7.hyper-v 安装完毕后，更新系统，保持系统为最新版本后就能开始安装 docker 了")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_8-在-windows-server-2016-中还要设置下防火墙来确保-docker-能上网"},{default:(0,s.w5)((()=>[(0,s.Uk)("8.在 windows server 2016 中还要设置下防火墙来确保 docker 能上网")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_9-测试"},{default:(0,s.w5)((()=>[(0,s.Uk)("9.测试")])),_:1})]),(0,s._)("li",null,[(0,s.Wm)(a,{to:"#_10-安装第一个-docker-容器"},{default:(0,s.w5)((()=>[(0,s.Uk)("10.安装第一个 docker 容器")])),_:1})])])]),t,(0,s._)("p",null,[(0,s.Uk)("资料： "),(0,s._)("a",d,[(0,s.Uk)("https://blog.docker.com/2016/09/build-your-first-docker-windows-server-container/"),(0,s.Wm)(u)]),(0,s._)("a",c,[(0,s.Uk)("http://blog.csdn.net/candy_ilync/article/details/52794834"),(0,s.Wm)(u)])]),p,(0,s._)("p",null,[(0,s._)("a",v,[(0,s.Uk)("https://www.microsoft.com/en-us/evalcenter/evaluate-hyper-v-server-2016"),(0,s.Wm)(u)])])],64)}]])},3744:(e,n)=>{n.Z=(e,n)=>{const a=e.__vccOpts||e;for(const[e,s]of n)a[e]=s;return a}}}]);