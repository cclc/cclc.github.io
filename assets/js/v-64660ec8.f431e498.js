"use strict";(self.webpackChunkcclc_vuepress=self.webpackChunkcclc_vuepress||[]).push([[8236],{9467:(e,a,n)=>{n.r(a),n.d(a,{data:()=>l});const l={key:"v-64660ec8",path:"/mess-knowledge/mac-xdebug-vscode.html",title:"【PHP】macOS10.11配置Xdebug＋Vscode",lang:"zh-CN",frontmatter:{title:"【PHP】macOS10.11配置Xdebug＋Vscode",date:"2016-08-04",categories:["Other"],tags:["macOS","Xdebug","Vscode"]},excerpt:"",headers:[{level:2,title:"1.从Xdebug官网下载Xdebug",slug:"_1-从xdebug官网下载xdebug",children:[]},{level:2,title:"2.解压文件",slug:"_2-解压文件",children:[]},{level:2,title:"3.安装command line tool就自动会帮你配置好Unix开发环境的",slug:"_3-安装command-line-tool就自动会帮你配置好unix开发环境的",children:[]},{level:2,title:"4.安装m4和autoconf",slug:"_4-安装m4和autoconf",children:[{level:3,title:"4.1安装m4",slug:"_4-1安装m4",children:[]},{level:3,title:"4.2安装autoconf",slug:"_4-2安装autoconf",children:[]}]},{level:2,title:"5.至此，我们终于可以运行 phpize 这句命令了",slug:"_5-至此-我们终于可以运行-phpize-这句命令了",children:[]},{level:2,title:"6.在phpize命令成功后，继续输入  ./configure --enable-xdebug",slug:"_6-在phpize命令成功后-继续输入-configure-enable-xdebug",children:[]},{level:2,title:"7.我们还需要配置 /etc/php.ini 使其加载xdebug这个扩展",slug:"_7-我们还需要配置-etc-php-ini-使其加载xdebug这个扩展",children:[]},{level:2,title:"8.配置vscode",slug:"_8-配置vscode",children:[]},{level:2,title:"9.使用",slug:"_9-使用",children:[]},{level:2,title:"10.参考资料",slug:"_10-参考资料",children:[]}],git:{},filePathRelative:"mess-knowledge/mac-xdebug-vscode.md"}},6733:(e,a,n)=>{n.r(a),n.d(a,{default:()=>k});var l=n(6252);const s=(0,l._)("h1",{id:"【php】macos10-11配置xdebug-vscode",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#【php】macos10-11配置xdebug-vscode","aria-hidden":"true"},"#"),(0,l.Uk)(" 【PHP】macOS10.11配置Xdebug＋Vscode")],-1),t=(0,l._)("p",null,"在mac上不使用其他的管理工具配置xdebug花费了我较多的时间，故在此整理出来方便别人，也让我重新整理下思路。 这个教程是建立在你已经在mac上配置好了php+apache环境前提下适用的。关于php+apache的配置可以参考我以前的博文。",-1),i={class:"table-of-contents"},o=(0,l._)("h2",{id:"_1-从xdebug官网下载xdebug",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#_1-从xdebug官网下载xdebug","aria-hidden":"true"},"#"),(0,l.Uk)(" 1.从Xdebug官网下载Xdebug")],-1),r={href:"https://xdebug.org/index.php",target:"_blank",rel:"noopener noreferrer"},d=(0,l.uE)('<p>如果你不知道你要下载哪个版本的话可以下载它建议的版本。使用方法是在 https://xdebug.org/wizard.php 这里的富文本框内贴上你phpinfo()后显示的页面信息。可以直接command+a全选然后粘贴。然后点击下方的analyse检测按钮，然后就会显示推荐的版本了。</p><h2 id="_2-解压文件" tabindex="-1"><a class="header-anchor" href="#_2-解压文件" aria-hidden="true">#</a> 2.解压文件</h2><p>然后在terminal里cd进入那个文件夹（注意是不包含package.xml的那个文件夹）。 输入phpize。 此时一般都会报错。这是我的报错信息，它提示我还有一些配置需要去完成。 <img src="/blog_images/mac-xdebug-vscode/1.png" alt="1"></p><h2 id="_3-安装command-line-tool就自动会帮你配置好unix开发环境的" tabindex="-1"><a class="header-anchor" href="#_3-安装command-line-tool就自动会帮你配置好unix开发环境的" aria-hidden="true">#</a> 3.安装command line tool就自动会帮你配置好Unix开发环境的</h2><p>可以选择在 terminal中输入</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>xcode-select <span class="token parameter variable">--install</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者是去苹果官方网站 https://developer.apple.com/opensource/ 下载后安装。 安装完成后，此时再输入</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>phpize\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>应该是显示这个： <img src="/blog_images/mac-xdebug-vscode/2.png" alt="2"> 这个表示你/usr目录下的include文件夹新建及配置完成了，然后我们就要开始安装autoconf了。</p><h2 id="_4-安装m4和autoconf" tabindex="-1"><a class="header-anchor" href="#_4-安装m4和autoconf" aria-hidden="true">#</a> 4.安装m4和autoconf</h2>',10),u={href:"http://mirrors.kernel.org/gnu/autoconf/",target:"_blank",rel:"noopener noreferrer"},c={href:"http://mirrors.kernel.org/gnu/m4/",target:"_blank",rel:"noopener noreferrer"},p=(0,l.uE)('<h3 id="_4-1安装m4" tabindex="-1"><a class="header-anchor" href="#_4-1安装m4" aria-hidden="true">#</a> 4.1安装m4</h3><ol><li>在terminal中cd进入m4的文件夹</li><li>./configure --prefix=/usr/local</li><li>make</li><li>sudo make install</li></ol><h3 id="_4-2安装autoconf" tabindex="-1"><a class="header-anchor" href="#_4-2安装autoconf" aria-hidden="true">#</a> 4.2安装autoconf</h3><ol><li>在terminal中cd进入autoconf的文件夹</li><li>./configure --prefix=/usr/local</li><li>make</li><li>sudo make install</li></ol><h2 id="_5-至此-我们终于可以运行-phpize-这句命令了" tabindex="-1"><a class="header-anchor" href="#_5-至此-我们终于可以运行-phpize-这句命令了" aria-hidden="true">#</a> 5.至此，我们终于可以运行 phpize 这句命令了</h2><p>在terminal中的 xdebug 目录下输入 phpize ，此时应该不会有任何的报错信息了。 <img src="/blog_images/mac-xdebug-vscode/3.png" alt="3"></p><h2 id="_6-在phpize命令成功后-继续输入-configure-enable-xdebug" tabindex="-1"><a class="header-anchor" href="#_6-在phpize命令成功后-继续输入-configure-enable-xdebug" aria-hidden="true">#</a> 6.在phpize命令成功后，继续输入 ./configure --enable-xdebug</h2><p>经过了较长的等待后最后四句显示为： <img src="/blog_images/mac-xdebug-vscode/4.png" alt="4"> 然后输入 make ，最后显示： <img src="/blog_images/mac-xdebug-vscode/5.png" alt="5"> 接着输入</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时会有报错，但是其实已经达到我们要的结果了。显示为： <img src="/blog_images/mac-xdebug-vscode/6.png" alt="6"> 到此为止xdebug已经算是成功的安装了。</p><h2 id="_7-我们还需要配置-etc-php-ini-使其加载xdebug这个扩展" tabindex="-1"><a class="header-anchor" href="#_7-我们还需要配置-etc-php-ini-使其加载xdebug这个扩展" aria-hidden="true">#</a> 7.我们还需要配置 /etc/php.ini 使其加载xdebug这个扩展</h2><p>我在该文件的最下面加上了</p><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Xdebug</span><span class="token punctuation">]</span></span>\n<span class="token key attr-name">zend_extension</span> <span class="token punctuation">=</span> <span class="token value attr-value">/usr/lib/php/extensions/no-debug-non-zts-20121212/xdebug.so</span>\n<span class="token key attr-name">xdebug.profiler_enable</span> <span class="token punctuation">=</span> <span class="token value attr-value">on</span>\n<span class="token key attr-name">xdebug.trace_output_dir</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">/Users/luchen/Documents/xdebug</span>&quot;</span>\n<span class="token key attr-name">xdebug.profile_output_dir</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">/Users/luchen/Documents/xdebug</span>&quot;</span>\n<span class="token key attr-name">xdebug.remote_enable</span> <span class="token punctuation">=</span> <span class="token value attr-value">1</span>\n<span class="token key attr-name">xdebug.remote_autostart</span> <span class="token punctuation">=</span> <span class="token value attr-value">1</span>\n<span class="token key attr-name">xdebug.remote_host</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;<span class="token inner-value">localhost</span>&quot;</span>\n<span class="token key attr-name">xdebug.remote_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">9000</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>zend_extension 路径不需要改，你们安装成功后xdebug.so的保存的路径就是这个。 下面的两个目录路径你们可以改成自己的。</p><p>至此。xdebug的配置就算完成了。我们可以重启下apache然后重新打开含有phpinfo()的页面，你会发现多了xdebug这个扩展。 <img src="/blog_images/mac-xdebug-vscode/7.png" alt="7"></p><h2 id="_8-配置vscode" tabindex="-1"><a class="header-anchor" href="#_8-配置vscode" aria-hidden="true">#</a> 8.配置vscode</h2><p>vscode是我比较喜欢的一个ide，我从它推出后就一直在使用，感觉比较轻便而且界面也比较舒服。 我们首先要安装php debug这个插件，我是用的是1.3版本的vscode。在右边栏的最下面能看到安装插件的按钮，点开后搜索php debug然后安装、重启vscode即可。 <img src="/blog_images/mac-xdebug-vscode/8.png" alt="8"></p><h2 id="_9-使用" tabindex="-1"><a class="header-anchor" href="#_9-使用" aria-hidden="true">#</a> 9.使用</h2><p><img src="/blog_images/mac-xdebug-vscode/9.png" alt="9"></p><ol><li>点击右边栏第四个bug图标。</li><li>点击上方的调试边上的下拉框，选择要怎么调试，此处我选择的是xdebug。然后点击绿色的右三角开始按钮，此时最下面的边栏会变成橙色的。</li><li>在你想调试的代码左侧打上断点。</li><li>刷新你的测试页面，此时那些变量的值你就能看到了。COOL! <img src="/blog_images/mac-xdebug-vscode/10.png" alt="10"> 除了在左边有变量的值外，其实你的鼠标移到变量上也能看到它的值。十分方便。</li></ol><h2 id="_10-参考资料" tabindex="-1"><a class="header-anchor" href="#_10-参考资料" aria-hidden="true">#</a> 10.参考资料</h2>',21),g={href:"https://xdebug.org/docs/install",target:"_blank",rel:"noopener noreferrer"},h={href:"https://segmentfault.com/q/1010000003882420",target:"_blank",rel:"noopener noreferrer"},m={href:"http://www.knowsky.com/890179.html",target:"_blank",rel:"noopener noreferrer"},b={href:"http://blog.csdn.net/x32sky/article/details/42710063",target:"_blank",rel:"noopener noreferrer"},_={href:"http://www.linuxdiyf.com/linux/20046.html",target:"_blank",rel:"noopener noreferrer"},v={},k=(0,n(3744).Z)(v,[["render",function(e,a){const n=(0,l.up)("RouterLink"),v=(0,l.up)("ExternalLinkIcon");return(0,l.wg)(),(0,l.iD)(l.HY,null,[s,t,(0,l._)("nav",i,[(0,l._)("ul",null,[(0,l._)("li",null,[(0,l.Wm)(n,{to:"#_1-从xdebug官网下载xdebug"},{default:(0,l.w5)((()=>[(0,l.Uk)("1.从Xdebug官网下载Xdebug")])),_:1})]),(0,l._)("li",null,[(0,l.Wm)(n,{to:"#_2-解压文件"},{default:(0,l.w5)((()=>[(0,l.Uk)("2.解压文件")])),_:1})]),(0,l._)("li",null,[(0,l.Wm)(n,{to:"#_3-安装command-line-tool就自动会帮你配置好unix开发环境的"},{default:(0,l.w5)((()=>[(0,l.Uk)("3.安装command line tool就自动会帮你配置好Unix开发环境的")])),_:1})]),(0,l._)("li",null,[(0,l.Wm)(n,{to:"#_4-安装m4和autoconf"},{default:(0,l.w5)((()=>[(0,l.Uk)("4.安装m4和autoconf")])),_:1}),(0,l._)("ul",null,[(0,l._)("li",null,[(0,l.Wm)(n,{to:"#_4-1安装m4"},{default:(0,l.w5)((()=>[(0,l.Uk)("4.1安装m4")])),_:1})]),(0,l._)("li",null,[(0,l.Wm)(n,{to:"#_4-2安装autoconf"},{default:(0,l.w5)((()=>[(0,l.Uk)("4.2安装autoconf")])),_:1})])])]),(0,l._)("li",null,[(0,l.Wm)(n,{to:"#_5-至此-我们终于可以运行-phpize-这句命令了"},{default:(0,l.w5)((()=>[(0,l.Uk)("5.至此，我们终于可以运行 phpize 这句命令了")])),_:1})]),(0,l._)("li",null,[(0,l.Wm)(n,{to:"#_6-在phpize命令成功后-继续输入-configure-enable-xdebug"},{default:(0,l.w5)((()=>[(0,l.Uk)("6.在phpize命令成功后，继续输入 ./configure --enable-xdebug")])),_:1})]),(0,l._)("li",null,[(0,l.Wm)(n,{to:"#_7-我们还需要配置-etc-php-ini-使其加载xdebug这个扩展"},{default:(0,l.w5)((()=>[(0,l.Uk)("7.我们还需要配置 /etc/php.ini 使其加载xdebug这个扩展")])),_:1})]),(0,l._)("li",null,[(0,l.Wm)(n,{to:"#_8-配置vscode"},{default:(0,l.w5)((()=>[(0,l.Uk)("8.配置vscode")])),_:1})]),(0,l._)("li",null,[(0,l.Wm)(n,{to:"#_9-使用"},{default:(0,l.w5)((()=>[(0,l.Uk)("9.使用")])),_:1})]),(0,l._)("li",null,[(0,l.Wm)(n,{to:"#_10-参考资料"},{default:(0,l.w5)((()=>[(0,l.Uk)("10.参考资料")])),_:1})])])]),o,(0,l._)("p",null,[(0,l.Uk)("地址："),(0,l._)("a",r,[(0,l.Uk)("https://xdebug.org/index.php"),(0,l.Wm)(v)])]),d,(0,l._)("p",null,[(0,l.Uk)("我是在 "),(0,l._)("a",u,[(0,l.Uk)("http://mirrors.kernel.org/gnu/autoconf/"),(0,l.Wm)(v)]),(0,l.Uk)(" 和 "),(0,l._)("a",c,[(0,l.Uk)("http://mirrors.kernel.org/gnu/m4/"),(0,l.Wm)(v)]),(0,l.Uk)(" 下下载了最新的.tar.gz的压缩包文件。 安装顺序是先安装m4然后是autoconf，如果顺序颠倒，autoconf会无法安装。")]),p,(0,l._)("p",null,[(0,l._)("a",g,[(0,l.Uk)("https://xdebug.org/docs/install"),(0,l.Wm)(v)]),(0,l._)("a",h,[(0,l.Uk)("https://segmentfault.com/q/1010000003882420"),(0,l.Wm)(v)]),(0,l._)("a",m,[(0,l.Uk)("http://www.knowsky.com/890179.html"),(0,l.Wm)(v)]),(0,l._)("a",b,[(0,l.Uk)("http://blog.csdn.net/x32sky/article/details/42710063"),(0,l.Wm)(v)]),(0,l._)("a",_,[(0,l.Uk)("http://www.linuxdiyf.com/linux/20046.html"),(0,l.Wm)(v)])])],64)}]])},3744:(e,a)=>{a.Z=(e,a)=>{const n=e.__vccOpts||e;for(const[e,l]of a)n[e]=l;return n}}}]);