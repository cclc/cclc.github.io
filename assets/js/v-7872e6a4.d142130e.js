"use strict";(self.webpackChunkcclc_vuepress=self.webpackChunkcclc_vuepress||[]).push([[1599],{4678:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-7872e6a4",path:"/backend/send-tasks-to-celery-from-django.html",title:"Send tasks to Celery from Django",lang:"zh-CN",frontmatter:{title:"Send tasks to Celery from Django",date:"2022-01-23",categories:["Django","Celery"],tags:["Other"]},excerpt:"",headers:[{level:2,title:"1.安装 Celery 相关资源",slug:"_1-安装-celery-相关资源",children:[]},{level:2,title:"2.Celery 项目代码",slug:"_2-celery-项目代码",children:[]},{level:2,title:"3.Django 项目代码",slug:"_3-django-项目代码",children:[]},{level:2,title:"4.测试",slug:"_4-测试",children:[]}],git:{},filePathRelative:"backend/send-tasks-to-celery-from-django.md"}},5200:(n,s,a)=>{a.r(s),a.d(s,{default:()=>c});var e=a(6252);const t=(0,e._)("h1",{id:"send-tasks-to-celery-from-django",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#send-tasks-to-celery-from-django","aria-hidden":"true"},"#"),(0,e.Uk)(" Send tasks to Celery from Django")],-1),l=(0,e._)("p",null,[(0,e._)("strong",null,"使用 Mysql 做为 Celery 的 broker,接受从 Django 发出的 Celery Task")],-1),p={class:"table-of-contents"},o=(0,e.uE)('<p>基于已有成功运行的 Django 项目，开始下面的配置</p><h2 id="_1-安装-celery-相关资源" tabindex="-1"><a class="header-anchor" href="#_1-安装-celery-相关资源" aria-hidden="true">#</a> 1.安装 Celery 相关资源</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pip3 <span class="token function">install</span> <span class="token assign-left variable">celery</span><span class="token operator">==</span><span class="token number">5.1</span>.2\npip3 <span class="token function">install</span> <span class="token assign-left variable">SQLAlchemy</span><span class="token operator">==</span><span class="token number">1.4</span>.31\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-celery-项目代码" tabindex="-1"><a class="header-anchor" href="#_2-celery-项目代码" aria-hidden="true">#</a> 2.Celery 项目代码</h2><p>项目结构</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>tasks\n    ├── settings.py\n    └── tasks.py\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>settings.py</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># mysql</span>\nBROKER_URL <span class="token operator">=</span> <span class="token string">&#39;sqla+mysql://xxx&#39;</span>\nCELERY_RESULT_BACKEND <span class="token operator">=</span> <span class="token string">&#39;db+mysql://xxx&#39;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>tasks.py</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> celery <span class="token keyword">import</span> Celery\n\napp <span class="token operator">=</span> Celery<span class="token punctuation">(</span><span class="token string">&#39;tasks&#39;</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span>config_from_object<span class="token punctuation">(</span><span class="token string">&#39;settings&#39;</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>task</span>\n<span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-django-项目代码" tabindex="-1"><a class="header-anchor" href="#_3-django-项目代码" aria-hidden="true">#</a> 3.Django 项目代码</h2><p>xxViews.py</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> json\n<span class="token keyword">from</span> django<span class="token punctuation">.</span>http <span class="token keyword">import</span> JsonResponse\n<span class="token keyword">from</span> celery <span class="token keyword">import</span> Celery\ncelery <span class="token operator">=</span> Celery<span class="token punctuation">(</span><span class="token string">&#39;sender&#39;</span><span class="token punctuation">,</span> broker<span class="token operator">=</span><span class="token string">&#39;sqla+mysql://xxx&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">celeryTest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token builtin">input</span> <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>request<span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    celery<span class="token punctuation">.</span>send_task<span class="token punctuation">(</span><span class="token string">&#39;tasks.add&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">[</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">[</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> JsonResponse <span class="token punctuation">(</span>\n        <span class="token punctuation">{</span>\n            <span class="token string">&#39;input&#39;</span><span class="token punctuation">:</span> <span class="token builtin">input</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-测试" tabindex="-1"><a class="header-anchor" href="#_4-测试" aria-hidden="true">#</a> 4.测试</h2><p>1 在浏览器里输入 view 对应的 url</p><p>url 上带上参数<code>?x=100&amp;y=200</code></p><p><img src="/blog_images/send-tasks-to-celery-from-django/1.png" alt="1"></p><p>2 另一边的 celery 输出 x,y 的值</p><p><img src="/blog_images/send-tasks-to-celery-from-django/2.png" alt="2"></p>',19),i={},c=(0,a(3744).Z)(i,[["render",function(n,s){const a=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,l,(0,e._)("nav",p,[(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_1-安装-celery-相关资源"},{default:(0,e.w5)((()=>[(0,e.Uk)("1.安装 Celery 相关资源")])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_2-celery-项目代码"},{default:(0,e.w5)((()=>[(0,e.Uk)("2.Celery 项目代码")])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_3-django-项目代码"},{default:(0,e.w5)((()=>[(0,e.Uk)("3.Django 项目代码")])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_4-测试"},{default:(0,e.w5)((()=>[(0,e.Uk)("4.测试")])),_:1})])])]),o],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);